"Project","ScanDate","DependencyName","DependencyPath","Description","License","Md5","Sha1","Identifiers","CPE","CVE","CWE","Vulnerability","Source","CVSSv2_Severity","CVSSv2_Score","CVSSv2","CVSSv3_BaseSeverity","CVSSv3_BaseScore","CVSSv3","CPE Confidence","Evidence Count"
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2015-6644,CWE-200 Information Exposure,"Bouncy Castle in Android before 5.1.1 LMY49F and 6.0 before 2016-01-01 allows attackers to obtain sensitive information via a crafted application, aka internal bug 24106146.",OSSINDEX,"","","",LOW,3.3,CVSS:/AV:L/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000338,CWE-347 Improper Verification of Cryptographic Signature,"In Bouncy Castle JCE Provider version 1.55 and earlier the DSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000339,CWE-310 Cryptographic Issues,In the Bouncy Castle JCE Provider version 1.55 and earlier the primary engine class used for AES was AESFastEngine. Due to the highly table driven approach used in the algorithm it turns out that if the data channel on the CPU can be monitored the lookup table accesses are sufficient to leak information on the AES key being used. There was also a leak in AESEngine although it was substantially less. AESEngine has been modified to remove any signs of leakage (testing carried out on Intel X86-64) and is now the primary AES class for the BC JCE provider from 1.56. Use of AESFastEngine is now only recommended where otherwise deemed appropriate.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000340,CWE-19 Data Processing Errors,"In the Bouncy Castle JCE Provider versions 1.51 to 1.55, a carry propagation bug was introduced in the implementation of squaring for several raw math classes have been fixed (org.bouncycastle.math.raw.Nat???). These classes are used by our custom elliptic curve implementations (org.bouncycastle.math.ec.custom.**), so there was the possibility of rare (in general usage) spurious calculations for elliptic curve scalar multiplications. Such errors would have been detected with high probability by the output validation for our scalar multipliers.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000341,CWE-361 7PK - Time and State,"In the Bouncy Castle JCE Provider version 1.55 and earlier DSA signature generation is vulnerable to timing attack. Where timings can be closely observed for the generation of signatures, the lack of blinding in 1.55, or earlier, may allow an attacker to gain information about the signature's k value and ultimately the private value as well.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000342,CWE-347 Improper Verification of Cryptographic Signature,"In the Bouncy Castle JCE Provider version 1.55 and earlier ECDSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000343,CWE-310 Cryptographic Issues,"In the Bouncy Castle JCE Provider version 1.55 and earlier the DSA key pair generator generates a weak private key if used with default values. If the JCA key pair generator is not explicitly initialised with DSA parameters, 1.55 and earlier generates a private value assuming a 1024 bit key size. In earlier releases this can be dealt with by explicitly passing parameters to the key pair generator.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000344,CWE-310 Cryptographic Issues,In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.,NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,HIGH,7.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000345,CWE-361 7PK - Time and State,"In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES/ECIES CBC mode vulnerable to padding oracle attack. For BC 1.55 and older, in an environment where timings can be easily observed, it is possible with enough observations to identify when the decryption is failing due to padding.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000346,CWE-320 Key Management Errors,In the Bouncy Castle JCE Provider version 1.55 and earlier the other party DH public key is not fully validated. This can cause issues as invalid keys can be used to reveal details about the other party's private key where static Diffie-Hellman is in use. As of release 1.56 the key parameters are checked on agreement calculation.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,LOW,3.7,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000352,CWE-310 Cryptographic Issues,In the Bouncy Castle JCE Provider version 1.55 and earlier the ECIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.,NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,HIGH,7.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2017-13098,CWE-203 Information Exposure Through Discrepancy,"BouncyCastle TLS prior to version 1.0.3, when configured to use the JCE (Java Cryptography Extension) for cryptographic functions, provides a weak Bleichenbacher oracle when any TLS cipher suite using RSA key exchange is negotiated. An attacker can recover the private key from a vulnerable application. This vulnerability is referred to as ""ROBOT.""",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2020-0187,CWE-310 Cryptographic Issues,"In engineSetMode of BaseBlockCipher.java, there is a possible incorrect cryptographic algorithm chosen due to an incomplete comparison. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-148517383",OSSINDEX,MEDIUM,5.5,/AV:L/AC:L/Au:/C:H/I:N/A:N,"","","",HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2020-15522,CWE-362 Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition'),"Bouncy Castle BC Java before 1.66, BC C# .NET before 1.8.7, BC-FJA before 1.0.1.2, 1.0.2.1, and BC-FNA before 1.0.1.1 have a timing issue within the EC math library that can expose information about the private key when an attacker is able to observe timing information for the generation of multiple deterministic ECDSA signatures.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2020-26939,CWE-203 Information Exposure Through Discrepancy,"In Legion of the Bouncy Castle BC before 1.61 and BC-FJA before 1.0.1.2, attackers can obtain sensitive information about a private exponent because of Observable Differences in Behavior to Error Inputs. This occurs in org.bouncycastle.crypto.encodings.OAEPEncoding. Sending invalid ciphertext that decrypts to a short payload in the OAEP Decoder could result in the throwing of an early exception, potentially leaking some information about the private exponent of the RSA private key performing the encryption.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2021-38542,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2021-40110,NVD-CWE-Other,"In Apache James, using Jazzer fuzzer, we identified that an IMAP user can craft IMAP LIST commands to orchestrate a Denial Of Service using a vulnerable Regular expression. This affected Apache James prior to 3.6.1 We recommend upgrading to Apache James 3.6.1 or higher , which enforce the use of RE2J regular expression engine to execute regex in linear time without back-tracking.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2021-40111,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"In Apache James, while fuzzing with Jazzer the IMAP parsing stack, we discover that crafted APPEND and STATUS IMAP command could be used to trigger infinite loops resulting in expensive CPU computations and OutOfMemory exceptions. This can be used for a Denial Of Service attack. The IMAP user needs to be authenticated to exploit this vulnerability. This affected Apache James prior to version 3.6.1. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2021-40525,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Apache James ManagedSieve implementation alongside with the file storage for sieve scripts is vulnerable to path traversal, allowing reading and writing any file. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade. Distributed and Cassandra based products are also not impacted.",NVD,MEDIUM,6.4,/AV:N/AC:L/Au:N/C:P/I:P/A:N,CRITICAL,9.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2022-28220,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),"Apache James prior to release 3.6.3 and 3.7.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. Fix of CVE-2021-38542, which solved similar problem fron Apache James 3.6.1, is subject to a parser differential and do not take into account concurrent requests.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2021-38542,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2021-40110,NVD-CWE-Other,"In Apache James, using Jazzer fuzzer, we identified that an IMAP user can craft IMAP LIST commands to orchestrate a Denial Of Service using a vulnerable Regular expression. This affected Apache James prior to 3.6.1 We recommend upgrading to Apache James 3.6.1 or higher , which enforce the use of RE2J regular expression engine to execute regex in linear time without back-tracking.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2021-40111,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"In Apache James, while fuzzing with Jazzer the IMAP parsing stack, we discover that crafted APPEND and STATUS IMAP command could be used to trigger infinite loops resulting in expensive CPU computations and OutOfMemory exceptions. This can be used for a Denial Of Service attack. The IMAP user needs to be authenticated to exploit this vulnerability. This affected Apache James prior to version 3.6.1. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2021-40525,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Apache James ManagedSieve implementation alongside with the file storage for sieve scripts is vulnerable to path traversal, allowing reading and writing any file. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade. Distributed and Cassandra based products are also not impacted.",NVD,MEDIUM,6.4,/AV:N/AC:L/Au:N/C:P/I:P/A:N,CRITICAL,9.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2022-28220,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),"Apache James prior to release 3.6.3 and 3.7.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. Fix of CVE-2021-38542, which solved similar problem fron Apache James 3.6.1, is subject to a parser differential and do not take into account concurrent requests.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: csi-java-swagger-codegen-1.0.0.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\csi-java-swagger-codegen-1.0.0.jar,"","",b2be21b9ea879b591e966995638ea218,71edbfa110f8b9aff2a8a47c292a7aa341b2cf38,pkg:maven/io.swagger/csi-java-swagger-codegen@1.0.0,cpe:2.3:a:swagger:swagger-codegen:1.0.0:*:*:*:*:*:*:*,CVE-2017-1000207,CWE-502 Deserialization of Untrusted Data,"A vulnerability in Swagger-Parser's version <= 1.0.30 and Swagger codegen version <= 2.2.2 yaml parsing functionality results in arbitrary code being executed when a maliciously crafted yaml Open-API specification is parsed. This in particular, affects the 'generate' and 'validate' command in swagger-codegen (<= 2.2.2) and can lead to arbitrary code being executed when these commands are used on a well-crafted yaml specification.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,18
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: csi-java-swagger-codegen-1.0.0.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\csi-java-swagger-codegen-1.0.0.jar,"","",b2be21b9ea879b591e966995638ea218,71edbfa110f8b9aff2a8a47c292a7aa341b2cf38,pkg:maven/io.swagger/csi-java-swagger-codegen@1.0.0,cpe:2.3:a:swagger:swagger-codegen:1.0.0:*:*:*:*:*:*:*,CVE-2017-1000208,CWE-502 Deserialization of Untrusted Data,"A vulnerability in Swagger-Parser's (version <= 1.0.30) yaml parsing functionality results in arbitrary code being executed when a maliciously crafted yaml Open-API specification is parsed. This in particular, affects the 'generate' and 'validate' command in swagger-codegen (<= 2.2.2) and can lead to arbitrary code being executed when these commands are used on a well-crafted yaml specification.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,18
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-12624,CWE-19 Data Processing Errors,"Apache CXF supports sending and receiving attachments via either the JAX-WS or JAX-RS specifications. It is possible to craft a message attachment header that could lead to a Denial of Service (DoS) attack on a CXF web service provider. Both JAX-WS and JAX-RS services are vulnerable to this attack. From Apache CXF 3.2.1 and 3.1.14, message attachment headers that are greater than 300 characters will be rejected by default. This value is configurable via the property ""attachment-max-header-size"".",OSSINDEX,"","","",MEDIUM,5.5,CVSS:/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-12624,CWE-19 Data Processing Errors,"Apache CXF supports sending and receiving attachments via either the JAX-WS or JAX-RS specifications. It is possible to craft a message attachment header that could lead to a Denial of Service (DoS) attack on a CXF web service provider. Both JAX-WS and JAX-RS services are vulnerable to this attack. From Apache CXF 3.2.1 and 3.1.14, message attachment headers that are greater than 300 characters will be rejected by default. This value is configurable via the property ""attachment-max-header-size"".",OSSINDEX,"","","",MEDIUM,5.5,CVSS:/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12419,CWE-863 Incorrect Authorization,"Apache CXF before 3.3.4 and 3.2.11 provides all of the components that are required to build a fully fledged OpenId Connect service. There is a vulnerability in the access token services, where it does not validate that the authenticated principal is equal to that of the supplied clientId parameter in the request. If a malicious client was able to somehow steal an authorization code issued to another client, then they could exploit this vulnerability to obtain an access token for the other client.",OSSINDEX,HIGH,9.8,/AV:N/AC:L/Au:/C:H/I:H/A:H,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-17573,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack, which allows a malicious actor to inject javascript into the web page. Please note that the attack exploits a feature which is not typically not present in modern browsers, who remove dot segments before sending the request. However, Mobile applications may be vulnerable.",OSSINDEX,MEDIUM,6.1,/AV:N/AC:L/Au:/C:L/I:L/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-5656,CWE-384 Session Fixation,"Apache CXF's STSClient before 3.1.11 and 3.0.13 uses a flawed way of caching tokens that are associated with delegation tokens, which means that an attacker could craft a token which would return an identifer corresponding to a cached token for another user.",OSSINDEX,"","","",HIGH,7.5,CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: dom4j-1.6.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\dom4j-1.6.1.jar,dom4j: the flexible XML framework for Java,"",4d8f51d3fe3900efc6e395be48030d6d,5d3ccc056b6f056dbf0dddfdf43894b9065a8f94,"pkg:maven/dom4j/dom4j@1.6.1, pkg:maven/org.zenframework.z8.dependencies.commons/dom4j-1.6.1@2.0",cpe:2.3:a:dom4j_project:dom4j:1.6.1:*:*:*:*:*:*:*,CVE-2018-1000632,CWE-91 XML Injection (aka Blind XPath Injection),"dom4j version prior to version 2.1.1 contains a CWE-91: XML Injection vulnerability in Class: Element. Methods: addElement, addAttribute that can result in an attacker tampering with XML documents through XML injection. This attack appear to be exploitable via an attacker specifying attributes or elements in the XML document. This vulnerability appears to have been fixed in 2.1.1 or later.",OSSINDEX,HIGH,7.5,/AV:N/AC:L/Au:/C:N/I:H/A:N,"","","","HIGH, HIGHEST",137
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: dom4j-1.6.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\dom4j-1.6.1.jar,dom4j: the flexible XML framework for Java,"",4d8f51d3fe3900efc6e395be48030d6d,5d3ccc056b6f056dbf0dddfdf43894b9065a8f94,"pkg:maven/dom4j/dom4j@1.6.1, pkg:maven/org.zenframework.z8.dependencies.commons/dom4j-1.6.1@2.0",cpe:2.3:a:dom4j_project:dom4j:1.6.1:*:*:*:*:*:*:*,CVE-2020-10683,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),"dom4j before 2.0.3 and 2.1.x before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"HIGH, HIGHEST",137
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: guava-20.0.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\guava-20.0.jar,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      Guava has only one code dependency - javax.annotation,     per the JSR-305 spec.",http://www.apache.org/licenses/LICENSE-2.0.txt,f32a8a2524620dbecc9f6bf6a20c293f,89507701249388e1ed5ddcf8c41f4ce1be7831ef,pkg:maven/com.google.guava/guava@20.0,cpe:2.3:a:google:guava:20.0:*:*:*:*:*:*:*,CVE-2018-10237,CWE-770 Allocation of Resources Without Limits or Throttling,"Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,21
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: guava-20.0.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\guava-20.0.jar,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      Guava has only one code dependency - javax.annotation,     per the JSR-305 spec.",http://www.apache.org/licenses/LICENSE-2.0.txt,f32a8a2524620dbecc9f6bf6a20c293f,89507701249388e1ed5ddcf8c41f4ce1be7831ef,pkg:maven/com.google.guava/guava@20.0,cpe:2.3:a:google:guava:20.0:*:*:*:*:*:*:*,CVE-2020-8908,CWE-732 Incorrect Permission Assignment for Critical Resource,"A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",NVD,LOW,2.1,/AV:L/AC:L/Au:N/C:P/I:N/A:N,LOW,3.3,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N,HIGH,21
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2019-11065,NVD-CWE-noinfo,Gradle versions from 1.4 to 5.3.1 use an insecure HTTP URL to download dependencies when the built-in JavaScript or CoffeeScript Gradle plugins are used. Dependency artifacts could have been maliciously compromised by a MITM attack against the ajax.googleapis.com web site.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2019-15052,CWE-522 Insufficiently Protected Credentials,"The HTTP client in Gradle before 5.6 sends authentication credentials originally destined for the configured host. If that host returns a 30x redirect, Gradle also sends those credentials to all subsequent hosts that the request redirects to. This is similar to CVE-2018-1000007.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2019-16370,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"The PGP signing plugin in Gradle before 6.0 relies on the SHA-1 algorithm, which might allow an attacker to replace an artifact with a different one that has the same SHA-1 message digest, a related issue to CVE-2005-4900.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2020-11979,NVD-CWE-Other,"As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2021-29428,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-379 Creation of Temporary File in Directory with Incorrect Permissions","In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the ""sticky"" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the ""sticky"" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.",NVD,MEDIUM,4.4,/AV:L/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.8,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2021-29429,CWE-377 Insecure Temporary File,"In Gradle before version 7.0, files created with open permissions in the system temporary directory can allow an attacker to access information downloaded by Gradle. Some builds could be vulnerable to a local information disclosure. Remote files accessed through TextResourceFactory are downloaded into the system temporary directory first. Sensitive information contained in these files can be exposed to other local users on the same system. If you do not use the `TextResourceFactory` API, you are not vulnerable. As of Gradle 7.0, uses of the system temporary directory have been moved to the Gradle User Home directory. By default, this directory is restricted to the user running the build. As a workaround, set a more restrictive umask that removes read access to other users. When files are created in the system temporary directory, they will not be accessible to other users. If you are unable to change your system's umask, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only.",NVD,LOW,1.9,/AV:L/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2021-32751,CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),"Gradle is a build tool with a focus on build automation. In versions prior to 7.2, start scripts generated by the `application` plugin and the `gradlew` script are both vulnerable to arbitrary code execution when an attacker is able to change environment variables for the user running the script. This may impact those who use `gradlew` on Unix-like systems or use the scripts generated by Gradle in thieir application on Unix-like systems. For this vulnerability to be exploitable, an attacker needs to be able to set the value of particular environment variables and have those environment variables be seen by the vulnerable scripts. This issue has been patched in Gradle 7.2 by removing the use of `eval` and requiring the use of the `bash` shell. There are a few workarounds available. For CI/CD systems using the Gradle build tool, one may ensure that untrusted users are unable to change environment variables for the user that executes `gradlew`. If one is unable to upgrade to Gradle 7.2, one may generate a new `gradlew` script with Gradle 7.2 and use it for older versions of Gradle. Fpplications using start scripts generated by Gradle, one may ensure that untrusted users are unable to change environment variables for the user that executes the start script. A vulnerable start script could be manually patched to remove the use of `eval` or the use of environment variables that affect the application's command-line. If the application is simple enough, one may be able to avoid the use of the start scripts by running the application directly with Java command.",NVD,HIGH,8.5,/AV:N/AC:M/Au:S/C:C/I:C/A:C,HIGH,7.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: hibernate-validator-4.2.0.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\hibernate-validator-4.2.0.Final-redhat-1.jar,Hibernate's Bean Validation (JSR-303) reference implementation.,http://www.apache.org/licenses/LICENSE-2.0.txt,c0a2c053ed18679d50e19c9794379157,28000d61b76062882626be06f3827a8c9cd7327f,pkg:maven/org.hibernate/hibernate-validator@4.2.0.Final-redhat-1,cpe:2.3:a:redhat:hibernate_validator:4.2.0.hat-1:*:*:*:*:*:*:*,CVE-2019-10219,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),A vulnerability was found in Hibernate-Validator. The SafeHtml validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions. This vulnerability can result in an XSS attack.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,38
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-core-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-core-2.6.2.jar,"Core Jackson abstractions, basic JSON streaming API implementation",http://www.apache.org/licenses/LICENSE-2.0.txt,5478388129427723d00ac8013b5b44a6,123f29333b2c6b3516b14252b6e93226bfcd6e37,pkg:maven/com.fasterxml.jackson.core/jackson-core@2.6.2,cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*,CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,45
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2017-15095,CWE-502 Deserialization of Untrusted Data,"A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2017-17485,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2017-7525,CWE-184 Incomplete Blacklist,"A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-11307,CWE-502 Deserialization of Untrusted Data,"An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-14718,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-14719,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-14720,"CWE-611 Improper Restriction of XML External Entity Reference ('XXE'), CWE-502 Deserialization of Untrusted Data",FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-14721,CWE-918 Server-Side Request Forgery (SSRF),FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,10.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-19360,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-19361,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-19362,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-5968,"CWE-502 Deserialization of Untrusted Data, CWE-184 Incomplete Blacklist",FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.,NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-7489,"CWE-502 Deserialization of Untrusted Data, CWE-184 Incomplete Blacklist","FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-14379,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,"SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup), leading to remote code execution.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-14540,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-16335,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-16942,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-16943,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-17531,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-10673,NVD-CWE-Other,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-25649,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),"A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-35490,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-35491,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-36518,CWE-787 Out-of-bounds Write,jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2022-42003,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. Additional fix version in 2.13.4.1 and 2.12.17.1",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2022-42004,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jackson-mapper-asl-1.9.9.redhat-4.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jackson-mapper-asl-1.9.9.redhat-4.jar,"",http://www.apache.org/licenses/LICENSE-2.0.txt,24cf9b39736fbd6f9243854fe14ab51c,d5ee59710c904c1d2d612f52da389e295617f50f,"",cpe:2.3:a:fasterxml:jackson-mapper-asl:1.9.9:*:*:*:*:*:*:*,CVE-2019-10172,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),A flaw was found in org.codehaus.jackson:jackson-mapper-asl:1.9.x libraries. XML external entity vulnerabilities similar CVE-2016-3720 also affects codehaus jackson-mapper-asl libraries but in different classes.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,"",20
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jettison-1.3.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jettison-1.3.1.jar,A StAX implementation for JSON.,"",ff4330f064a5eddcdc24a29d344a21cc,056dcc8480ecd2c03ec004aa76278d1f2d621561,pkg:maven/org.codehaus.jettison/jettison@1.3.1,cpe:2.3:a:jettison_project:jettison:1.3.1:*:*:*:*:*:*:*,CVE-2022-40149,CWE-787 Out-of-bounds Write,"Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: jettison-1.3.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\jettison-1.3.1.jar,A StAX implementation for JSON.,"",ff4330f064a5eddcdc24a29d344a21cc,056dcc8480ecd2c03ec004aa76278d1f2d621561,pkg:maven/org.codehaus.jettison/jettison@1.3.1,cpe:2.3:a:jettison_project:jettison:1.3.1:*:*:*:*:*:*:*,CVE-2022-40150,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by Out of memory. This effect may support a denial of service attack.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: postgresql-42.2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\postgresql-42.2.6.jar,Java JDBC 4.2 (JRE 8+) driver for PostgreSQL database,BSD-2-Clause: https://jdbc.postgresql.org/about/license.html,4bfbde0ae27a80912dd9664d86c1d934,58586d617d57746853fc0b8f37c83a8384fcd0ca,pkg:maven/org.postgresql/postgresql@42.2.6,cpe:2.3:a:postgresql:postgresql_jdbc_driver:42.2.6:*:*:*:*:*:*:*,CVE-2020-13692,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),PostgreSQL JDBC Driver (aka PgJDBC) before 42.2.13 allows XXE.,NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.7,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:H,HIGH,47
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: postgresql-42.2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\postgresql-42.2.6.jar,Java JDBC 4.2 (JRE 8+) driver for PostgreSQL database,BSD-2-Clause: https://jdbc.postgresql.org/about/license.html,4bfbde0ae27a80912dd9664d86c1d934,58586d617d57746853fc0b8f37c83a8384fcd0ca,pkg:maven/org.postgresql/postgresql@42.2.6,cpe:2.3:a:postgresql:postgresql_jdbc_driver:42.2.6:*:*:*:*:*:*:*,CVE-2022-21724,CWE-665 Improper Initialization,"pgjdbc is the offical PostgreSQL JDBC Driver. A security hole was found in the jdbc driver for postgresql database while doing security research. The system using the postgresql library will be attacked when attacker control the jdbc url or properties. pgjdbc instantiates plugin instances based on class names provided via `authenticationPluginClassName`, `sslhostnameverifier`, `socketFactory`, `sslfactory`, `sslpasswordcallback` connection properties. However, the driver did not verify if the class implements the expected interface before instantiating the class. This can lead to code execution loaded via arbitrary classes. Users using plugins are advised to upgrade. There are no known workarounds for this issue.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,47
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: postgresql-42.2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\postgresql-42.2.6.jar,Java JDBC 4.2 (JRE 8+) driver for PostgreSQL database,BSD-2-Clause: https://jdbc.postgresql.org/about/license.html,4bfbde0ae27a80912dd9664d86c1d934,58586d617d57746853fc0b8f37c83a8384fcd0ca,pkg:maven/org.postgresql/postgresql@42.2.6,cpe:2.3:a:postgresql:postgresql_jdbc_driver:42.2.6:*:*:*:*:*:*:*,CVE-2022-26520,CWE-20 Improper Input Validation,"** DISPUTED ** In pgjdbc before 42.3.3, an attacker (who controls the jdbc URL or properties) can call java.util.logging.FileHandler to write to arbitrary files through the loggerFile and loggerLevel connection properties. An example situation is that an attacker could create an executable JSP file under a Tomcat web root. NOTE: the vendor's position is that there is no pgjdbc vulnerability; instead, it is a vulnerability for any application to use the pgjdbc driver with untrusted connection properties.",OSSINDEX,HIGH,9.8,/AV:N/AC:L/Au:/C:H/I:H/A:H,"","","",HIGH,47
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: postgresql-42.2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\postgresql-42.2.6.jar,Java JDBC 4.2 (JRE 8+) driver for PostgreSQL database,BSD-2-Clause: https://jdbc.postgresql.org/about/license.html,4bfbde0ae27a80912dd9664d86c1d934,58586d617d57746853fc0b8f37c83a8384fcd0ca,pkg:maven/org.postgresql/postgresql@42.2.6,cpe:2.3:a:postgresql:postgresql_jdbc_driver:42.2.6:*:*:*:*:*:*:*,CVE-2022-31197,CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),"PostgreSQL JDBC Driver (PgJDBC for short) allows Java programs to connect to a PostgreSQL database using standard, database independent Java code. The PGJDBC implementation of the `java.sql.ResultRow.refreshRow()` method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. `;`, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user. User applications that do not invoke the `ResultSet.refreshRow()` method are not impacted. User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the `refreshRow()` method on the ResultSet. Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user. Patched versions will be released as `42.2.26` and `42.4.1`. Users are advised to upgrade. There are no known workarounds for this issue.",NVD,"","","",HIGH,8.0,CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H,HIGH,47
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: sign-7.1.12.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\sign-7.1.12.jar,"","",3652bf7e3e1cd7e63c7b8d4d2e36760d,567c70eec13d09ef3469dc4c048d208a715372d2,pkg:maven/com.itextpdf/sign@7.1.12,cpe:2.3:a:itextpdf:itext:7.1.12:*:*:*:*:*:*:*,CVE-2021-43113,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),iTextPDF in iText 7 and up to 7.1.17 allows command injection via a CompareTool filename that is mishandled on the gs (aka Ghostscript) command line in GhostscriptHelper.java.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,19
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: sign-7.1.12.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\sign-7.1.12.jar,"","",3652bf7e3e1cd7e63c7b8d4d2e36760d,567c70eec13d09ef3469dc4c048d208a715372d2,pkg:maven/com.itextpdf/sign@7.1.12,cpe:2.3:a:itextpdf:itext:7.1.12:*:*:*:*:*:*:*,CVE-2022-24196,CWE-770 Allocation of Resources Without Limits or Throttling,"iText v7.1.17 was discovered to contain an out-of-memory error via the component readStreamBytesRaw, which allows attackers to cause a Denial of Service (DoS) via a crafted PDF file.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,19
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: sign-7.1.12.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\sign-7.1.12.jar,"","",3652bf7e3e1cd7e63c7b8d4d2e36760d,567c70eec13d09ef3469dc4c048d208a715372d2,pkg:maven/com.itextpdf/sign@7.1.12,cpe:2.3:a:itextpdf:itext:7.1.12:*:*:*:*:*:*:*,CVE-2022-24197,CWE-787 Out-of-bounds Write,"iText v7.1.17 was discovered to contain a stack-based buffer overflow via the component ByteBuffer.append, which allows attackers to cause a Denial of Service (DoS) via a crafted PDF file.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,19
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-0201,CWE-254 7PK - Security Features,"The Java SockJS client in Pivotal Spring Framework 4.1.x before 4.1.5 generates predictable session ids, which allows remote attackers to send messages to other sessions via unspecified vectors.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,"","","",HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-3192,CWE-119 Improper Restriction of Operations within the Bounds of a Memory Buffer,"Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not properly process inline DTD declarations when DTD is not entirely disabled, which allows remote attackers to cause a denial of service (memory consumption and out-of-memory errors) via a crafted XML file.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.5,CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-5211,CWE-552 Files or Directories Accessible to External Parties,"Under some situations, the Spring Framework 4.2.0 to 4.2.1, 4.0.0 to 4.1.7, 3.2.0 to 3.2.14 and older unsupported versions is vulnerable to a Reflected File Download (RFD) attack. The attack involves a malicious user crafting a URL with a batch script extension that results in the response being downloaded rather than rendered and also includes some input reflected in the response.",NVD,HIGH,9.3,/AV:N/AC:M/Au:N/C:C/I:C/A:C,CRITICAL,9.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2016-1000027,CWE-502 Deserialization of Untrusted Data,"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2016-5007,"CWE-264 Permissions, Privileges, and Access Controls","Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-11039,NVD-CWE-noinfo,"Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-11040,CWE-829 Inclusion of Functionality from Untrusted Control Sphere,"Spring Framework, versions 5.0.x prior to 5.0.7 and 4.3.x prior to 4.3.18 and older unsupported versions, allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through AbstractJsonpResponseBodyAdvice for REST controllers and MappingJackson2JsonView for browser requests. Both are not enabled by default in Spring Framework nor Spring Boot, however, when MappingJackson2JsonView is configured in an application, JSONP support is automatically ready to use through the ""jsonp"" and ""callback"" JSONP parameters, enabling cross-domain requests.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1257,NVD-CWE-noinfo,"Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1270,CWE-94 Improper Control of Generation of Code ('Code Injection'),"Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2020-5421,NVD-CWE-noinfo,"In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",NVD,LOW,3.6,/AV:N/AC:H/Au:S/C:P/I:P/A:N,MEDIUM,6.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22950,CWE-770 Allocation of Resources Without Limits or Throttling,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22965,CWE-94 Improper Control of Generation of Code ('Code Injection'),"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22968,CWE-178 Improper Handling of Case Sensitivity,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22970,CWE-770 Allocation of Resources Without Limits or Throttling,"In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.",NVD,LOW,3.5,/AV:N/AC:M/Au:S/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-0201,CWE-254 7PK - Security Features,"The Java SockJS client in Pivotal Spring Framework 4.1.x before 4.1.5 generates predictable session ids, which allows remote attackers to send messages to other sessions via unspecified vectors.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,"","","",HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-3192,CWE-119 Improper Restriction of Operations within the Bounds of a Memory Buffer,"Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not properly process inline DTD declarations when DTD is not entirely disabled, which allows remote attackers to cause a denial of service (memory consumption and out-of-memory errors) via a crafted XML file.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.5,CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-5211,CWE-552 Files or Directories Accessible to External Parties,"Under some situations, the Spring Framework 4.2.0 to 4.2.1, 4.0.0 to 4.1.7, 3.2.0 to 3.2.14 and older unsupported versions is vulnerable to a Reflected File Download (RFD) attack. The attack involves a malicious user crafting a URL with a batch script extension that results in the response being downloaded rather than rendered and also includes some input reflected in the response.",NVD,HIGH,9.3,/AV:N/AC:M/Au:N/C:C/I:C/A:C,CRITICAL,9.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2016-1000027,CWE-502 Deserialization of Untrusted Data,"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2016-5007,"CWE-264 Permissions, Privileges, and Access Controls","Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-11039,NVD-CWE-noinfo,"Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-11040,CWE-829 Inclusion of Functionality from Untrusted Control Sphere,"Spring Framework, versions 5.0.x prior to 5.0.7 and 4.3.x prior to 4.3.18 and older unsupported versions, allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through AbstractJsonpResponseBodyAdvice for REST controllers and MappingJackson2JsonView for browser requests. Both are not enabled by default in Spring Framework nor Spring Boot, however, when MappingJackson2JsonView is configured in an application, JSONP support is automatically ready to use through the ""jsonp"" and ""callback"" JSONP parameters, enabling cross-domain requests.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1257,NVD-CWE-noinfo,"Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1270,CWE-94 Improper Control of Generation of Code ('Code Injection'),"Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1272,"CWE-264 Permissions, Privileges, and Access Controls","Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.",OSSINDEX,HIGH,7.5,/AV:N/AC:H/Au:/C:H/I:H/A:H,"","","",HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2020-5421,NVD-CWE-noinfo,"In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",NVD,LOW,3.6,/AV:N/AC:H/Au:S/C:P/I:P/A:N,MEDIUM,6.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22950,CWE-770 Allocation of Resources Without Limits or Throttling,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22965,CWE-94 Improper Control of Generation of Code ('Code Injection'),"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22968,CWE-178 Improper Handling of Case Sensitivity,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22970,CWE-770 Allocation of Resources Without Limits or Throttling,"In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.",NVD,LOW,3.5,/AV:N/AC:M/Au:S/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-annotations:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-annotations/pom.xml,"Core annotations used for value types, used by Jackson data binding package.","",aae98c6f8c355aa333afd3635f3d77e7,912620afe72203ec07af99b4fa03f655dbfdc4a5,pkg:maven/com.fasterxml.jackson.core/jackson-annotations@2.9.3,cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*,CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,16
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-core:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.xml,"Core Jackson processing abstractions (aka Streaming API), implementation for JSON","",c102598475d327960d1904c2124caee2,bab41c3beea2ffb9527099d51d7cd428a64e4ee5,pkg:maven/com.fasterxml.jackson.core/jackson-core@2.9.3,cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*,CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2017-17485,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-11307,CWE-502 Deserialization of Untrusted Data,"An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-12022,CWE-502 Deserialization of Untrusted Data,"An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Jodd-db jar (for database access for the Jodd framework) in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",NVD,MEDIUM,5.1,/AV:N/AC:H/Au:N/C:P/I:P/A:P,HIGH,7.5,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-12023,CWE-502 Deserialization of Untrusted Data,"An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Oracle JDBC jar in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",NVD,MEDIUM,5.1,/AV:N/AC:H/Au:N/C:P/I:P/A:P,HIGH,7.5,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-14718,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-14719,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-14720,"CWE-611 Improper Restriction of XML External Entity Reference ('XXE'), CWE-502 Deserialization of Untrusted Data",FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-14721,CWE-918 Server-Side Request Forgery (SSRF),FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,10.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-19360,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-19361,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-19362,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-5968,"CWE-502 Deserialization of Untrusted Data, CWE-184 Incomplete Blacklist",FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.,NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-7489,"CWE-502 Deserialization of Untrusted Data, CWE-184 Incomplete Blacklist","FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-12086,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-12384,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.9.1 might allow attackers to have a variety of impacts by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content, remote code execution may be possible.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-12814,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14379,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,"SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup), leading to remote code execution.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14439,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14540,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14892,CWE-502 Deserialization of Untrusted Data,"A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14893,CWE-502 Deserialization of Untrusted Data,"A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-16335,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-16942,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-16943,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-17267,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-17531,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-20330,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-10672,NVD-CWE-Other,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory (aka aries.transaction.jms).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-10673,NVD-CWE-Other,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-10968,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.aoju.bus.proxy.provider.remoting.RmiProvider (aka bus-proxy).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-10969,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to javax.swing.JEditorPane.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11111,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.activemq.* (aka activemq-jms, activemq-core, activemq-pool, and activemq-pool-jms).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11112,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.proxy.provider.remoting.RmiProvider (aka apache/commons-proxy).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11113,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.openjpa.ee.WASRegistryManagedRuntime (aka openjpa).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11619,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.springframework.aop.config.MethodLocatingFactoryBean (aka spring-aop).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11620,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.jelly.impl.Embedded (aka commons-jelly).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-14060,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.xalan.lib.sql.JNDIConnectionPool (aka apache/drill).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-14061,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oracle.jms.AQjmsQueueConnectionFactory, oracle.jms.AQjmsXATopicConnectionFactory, oracle.jms.AQjmsTopicConnectionFactory, oracle.jms.AQjmsXAQueueConnectionFactory, and oracle.jms.AQjmsXAConnectionFactory (aka weblogic/oracle-aqjms).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-14062,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-14195,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to org.jsecurity.realm.jndi.JndiRealmFactory (aka org.jsecurity).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-24616,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPDataSource (aka Anteros-DBCP).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-24750,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-25649,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),"A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-35490,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-35491,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-35728,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool (aka embedded Xalan in org.glassfish.web/javax.servlet.jsp.jstl).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36179,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36180,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36181,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36182,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36183,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36184,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36185,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36186,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36187,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36188,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36189,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36518,CWE-787 Out-of-bounds Write,jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-8840,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-9546,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-9547,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-9548,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2021-20190,CWE-502 Deserialization of Untrusted Data,A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.,NVD,HIGH,8.3,/AV:N/AC:M/Au:N/C:P/I:P/A:C,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2022-42003,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. Additional fix version in 2.13.4.1 and 2.12.17.1",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2022-42004,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.google.guava:guava:18.0),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.google.guava/guava/pom.xml,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      Guava has only one code dependency - javax.annotation,     per the JSR-305 spec.","",e0eb52406b1a3b7ad2fda312c8a22bbd,2ec12f8d27a64e970b8be0fbd1d52dfec51cd41c,pkg:maven/com.google.guava/guava@18.0,cpe:2.3:a:google:guava:18.0:*:*:*:*:*:*:*,CVE-2018-10237,CWE-770 Allocation of Resources Without Limits or Throttling,"Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,9
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: com.google.guava:guava:18.0),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.google.guava/guava/pom.xml,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      Guava has only one code dependency - javax.annotation,     per the JSR-305 spec.","",e0eb52406b1a3b7ad2fda312c8a22bbd,2ec12f8d27a64e970b8be0fbd1d52dfec51cd41c,pkg:maven/com.google.guava/guava@18.0,cpe:2.3:a:google:guava:18.0:*:*:*:*:*:*:*,CVE-2020-8908,CWE-732 Incorrect Permission Assignment for Critical Resource,"A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",NVD,LOW,2.1,/AV:L/AC:L/Au:N/C:P/I:N/A:N,LOW,3.3,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N,HIGH,9
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2021-38542,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2021-40110,NVD-CWE-Other,"In Apache James, using Jazzer fuzzer, we identified that an IMAP user can craft IMAP LIST commands to orchestrate a Denial Of Service using a vulnerable Regular expression. This affected Apache James prior to 3.6.1 We recommend upgrading to Apache James 3.6.1 or higher , which enforce the use of RE2J regular expression engine to execute regex in linear time without back-tracking.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2021-40111,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"In Apache James, while fuzzing with Jazzer the IMAP parsing stack, we discover that crafted APPEND and STATUS IMAP command could be used to trigger infinite loops resulting in expensive CPU computations and OutOfMemory exceptions. This can be used for a Denial Of Service attack. The IMAP user needs to be authenticated to exploit this vulnerability. This affected Apache James prior to version 3.6.1. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2021-40525,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Apache James ManagedSieve implementation alongside with the file storage for sieve scripts is vulnerable to path traversal, allowing reading and writing any file. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade. Distributed and Cassandra based products are also not impacted.",NVD,MEDIUM,6.4,/AV:N/AC:L/Au:N/C:P/I:P/A:N,CRITICAL,9.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2022-28220,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),"Apache James prior to release 3.6.3 and 3.7.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. Fix of CVE-2021-38542, which solved similar problem fron Apache James 3.6.1, is subject to a parser differential and do not take into account concurrent requests.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: commons-io:commons-io:2.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-io/commons-io/pom.xml,"The Commons IO library contains utility classes, stream implementations, file filters,  file comparators, endian transformation classes, and much more.","",a75b48557fe5da29195020755a5b1be7,9ece23effe8bce3904f3797a76b1ba6ab681e1b9,pkg:maven/commons-io/commons-io@2.4,cpe:2.3:a:apache:commons_io:2.4:*:*:*:*:*:*:*,CVE-2021-29425,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like ""//../foo"", or ""\\..\foo"", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus ""limited"" path traversal), if the calling code would use the result to construct a path value.",NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,MEDIUM,4.8,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N,HIGH,86
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2019-0228,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),"Apache PDFBox 2.0.14 does not properly initialize the XML parser, which allows context-dependent attackers to conduct XML External Entity (XXE) attacks via a crafted XFDF.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2021-38542,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2021-40110,NVD-CWE-Other,"In Apache James, using Jazzer fuzzer, we identified that an IMAP user can craft IMAP LIST commands to orchestrate a Denial Of Service using a vulnerable Regular expression. This affected Apache James prior to 3.6.1 We recommend upgrading to Apache James 3.6.1 or higher , which enforce the use of RE2J regular expression engine to execute regex in linear time without back-tracking.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2021-40111,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"In Apache James, while fuzzing with Jazzer the IMAP parsing stack, we discover that crafted APPEND and STATUS IMAP command could be used to trigger infinite loops resulting in expensive CPU computations and OutOfMemory exceptions. This can be used for a Denial Of Service attack. The IMAP user needs to be authenticated to exploit this vulnerability. This affected Apache James prior to version 3.6.1. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2021-40525,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Apache James ManagedSieve implementation alongside with the file storage for sieve scripts is vulnerable to path traversal, allowing reading and writing any file. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade. Distributed and Cassandra based products are also not impacted.",NVD,MEDIUM,6.4,/AV:N/AC:L/Au:N/C:P/I:P/A:N,CRITICAL,9.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2022-28220,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),"Apache James prior to release 3.6.3 and 3.7.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. Fix of CVE-2021-38542, which solved similar problem fron Apache James 3.6.1, is subject to a parser differential and do not take into account concurrent requests.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.apache.httpcomponents:httpclient:4.5.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.httpcomponents/httpclient/pom.xml,Apache HttpComponents Client,"",71fd2a5a505554f3646f973a80c10b63,56f6338b324e438307e1f2c2b33bd02268310fc2,pkg:maven/org.apache.httpcomponents/httpclient@4.5.2,cpe:2.3:a:apache:httpclient:4.5.2:*:*:*:*:*:*:*,CVE-2020-13956,NVD-CWE-noinfo,Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.slf4j:slf4j-ext:1.7.12),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.slf4j/slf4j-ext/pom.xml,Extensions to the SLF4J API,"",dadb4b324ef7131af81df7b01748fb72,eca2134de49b6f8a5825e6ef8052e69fc3fddbcd,pkg:maven/org.slf4j/slf4j-ext@1.7.12,"",CVE-2018-8088,CWE-502 Deserialization of Untrusted Data,"org.slf4j.ext.EventData in the slf4j-ext module in QOS.CH SLF4J before 1.8.0-beta2 allows remote attackers to bypass intended access restrictions via crafted data. EventData in the slf4j-ext module in QOS.CH SLF4J, has been fixed in SLF4J versions 1.7.26 later and in the 2.0.x series.",OSSINDEX,HIGH,9.8,/AV:N/AC:L/Au:/C:H/I:H/A:H,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2017-18640,CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion'),"The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-25857,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.,NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-38749,CWE-787 Out-of-bounds Write,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",NVD,"","","",MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-38750,CWE-787 Out-of-bounds Write,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",NVD,"","","",MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-38751,CWE-787 Out-of-bounds Write,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",NVD,"","","",MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-38752,CWE-787 Out-of-bounds Write,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",NVD,"","","",MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2016-6199,CWE-502 Deserialization of Untrusted Data,ObjectSocketWrapper.java in Gradle 2.12 allows remote attackers to execute arbitrary code via a crafted serialized object.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-11065,NVD-CWE-noinfo,Gradle versions from 1.4 to 5.3.1 use an insecure HTTP URL to download dependencies when the built-in JavaScript or CoffeeScript Gradle plugins are used. Dependency artifacts could have been maliciously compromised by a MITM attack against the ajax.googleapis.com web site.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-15052,CWE-522 Insufficiently Protected Credentials,"The HTTP client in Gradle before 5.6 sends authentication credentials originally destined for the configured host. If that host returns a 30x redirect, Gradle also sends those credentials to all subsequent hosts that the request redirects to. This is similar to CVE-2018-1000007.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-16370,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"The PGP signing plugin in Gradle before 6.0 relies on the SHA-1 algorithm, which might allow an attacker to replace an artifact with a different one that has the same SHA-1 message digest, a related issue to CVE-2005-4900.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2020-11979,NVD-CWE-Other,"As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-29428,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-379 Creation of Temporary File in Directory with Incorrect Permissions","In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the ""sticky"" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the ""sticky"" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.",NVD,MEDIUM,4.4,/AV:L/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.8,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-29429,CWE-377 Insecure Temporary File,"In Gradle before version 7.0, files created with open permissions in the system temporary directory can allow an attacker to access information downloaded by Gradle. Some builds could be vulnerable to a local information disclosure. Remote files accessed through TextResourceFactory are downloaded into the system temporary directory first. Sensitive information contained in these files can be exposed to other local users on the same system. If you do not use the `TextResourceFactory` API, you are not vulnerable. As of Gradle 7.0, uses of the system temporary directory have been moved to the Gradle User Home directory. By default, this directory is restricted to the user running the build. As a workaround, set a more restrictive umask that removes read access to other users. When files are created in the system temporary directory, they will not be accessible to other users. If you are unable to change your system's umask, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only.",NVD,LOW,1.9,/AV:L/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-32751,CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),"Gradle is a build tool with a focus on build automation. In versions prior to 7.2, start scripts generated by the `application` plugin and the `gradlew` script are both vulnerable to arbitrary code execution when an attacker is able to change environment variables for the user running the script. This may impact those who use `gradlew` on Unix-like systems or use the scripts generated by Gradle in thieir application on Unix-like systems. For this vulnerability to be exploitable, an attacker needs to be able to set the value of particular environment variables and have those environment variables be seen by the vulnerable scripts. This issue has been patched in Gradle 7.2 by removing the use of `eval` and requiring the use of the `bash` shell. There are a few workarounds available. For CI/CD systems using the Gradle build tool, one may ensure that untrusted users are unable to change environment variables for the user that executes `gradlew`. If one is unable to upgrade to Gradle 7.2, one may generate a new `gradlew` script with Gradle 7.2 and use it for older versions of Gradle. Fpplications using start scripts generated by Gradle, one may ensure that untrusted users are unable to change environment variables for the user that executes the start script. A vulnerable start script could be manually patched to remove the use of `eval` or the use of environment variables that affect the application's command-line. If the application is simple enough, one may be able to avoid the use of the start scripts by running the application directly with Java command.",NVD,HIGH,8.5,/AV:N/AC:M/Au:S/C:C/I:C/A:C,HIGH,7.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\android\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2016-6199,CWE-502 Deserialization of Untrusted Data,ObjectSocketWrapper.java in Gradle 2.12 allows remote attackers to execute arbitrary code via a crafted serialized object.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\android\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-11065,NVD-CWE-noinfo,Gradle versions from 1.4 to 5.3.1 use an insecure HTTP URL to download dependencies when the built-in JavaScript or CoffeeScript Gradle plugins are used. Dependency artifacts could have been maliciously compromised by a MITM attack against the ajax.googleapis.com web site.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\android\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-15052,CWE-522 Insufficiently Protected Credentials,"The HTTP client in Gradle before 5.6 sends authentication credentials originally destined for the configured host. If that host returns a 30x redirect, Gradle also sends those credentials to all subsequent hosts that the request redirects to. This is similar to CVE-2018-1000007.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\android\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-16370,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"The PGP signing plugin in Gradle before 6.0 relies on the SHA-1 algorithm, which might allow an attacker to replace an artifact with a different one that has the same SHA-1 message digest, a related issue to CVE-2005-4900.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\android\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2020-11979,NVD-CWE-Other,"As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\android\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-29428,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-379 Creation of Temporary File in Directory with Incorrect Permissions","In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the ""sticky"" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the ""sticky"" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.",NVD,MEDIUM,4.4,/AV:L/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.8,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\android\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-29429,CWE-377 Insecure Temporary File,"In Gradle before version 7.0, files created with open permissions in the system temporary directory can allow an attacker to access information downloaded by Gradle. Some builds could be vulnerable to a local information disclosure. Remote files accessed through TextResourceFactory are downloaded into the system temporary directory first. Sensitive information contained in these files can be exposed to other local users on the same system. If you do not use the `TextResourceFactory` API, you are not vulnerable. As of Gradle 7.0, uses of the system temporary directory have been moved to the Gradle User Home directory. By default, this directory is restricted to the user running the build. As a workaround, set a more restrictive umask that removes read access to other users. When files are created in the system temporary directory, they will not be accessible to other users. If you are unable to change your system's umask, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only.",NVD,LOW,1.9,/AV:L/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\android\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-32751,CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),"Gradle is a build tool with a focus on build automation. In versions prior to 7.2, start scripts generated by the `application` plugin and the `gradlew` script are both vulnerable to arbitrary code execution when an attacker is able to change environment variables for the user running the script. This may impact those who use `gradlew` on Unix-like systems or use the scripts generated by Gradle in thieir application on Unix-like systems. For this vulnerability to be exploitable, an attacker needs to be able to set the value of particular environment variables and have those environment variables be seen by the vulnerable scripts. This issue has been patched in Gradle 7.2 by removing the use of `eval` and requiring the use of the `bash` shell. There are a few workarounds available. For CI/CD systems using the Gradle build tool, one may ensure that untrusted users are unable to change environment variables for the user that executes `gradlew`. If one is unable to upgrade to Gradle 7.2, one may generate a new `gradlew` script with Gradle 7.2 and use it for older versions of Gradle. Fpplications using start scripts generated by Gradle, one may ensure that untrusted users are unable to change environment variables for the user that executes the start script. A vulnerable start script could be manually patched to remove the use of `eval` or the use of environment variables that affect the application's command-line. If the application is simple enough, one may be able to avoid the use of the start scripts by running the application directly with Java command.",NVD,HIGH,8.5,/AV:N/AC:M/Au:S/C:C/I:C/A:C,HIGH,7.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\scala\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2016-6199,CWE-502 Deserialization of Untrusted Data,ObjectSocketWrapper.java in Gradle 2.12 allows remote attackers to execute arbitrary code via a crafted serialized object.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\scala\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-11065,NVD-CWE-noinfo,Gradle versions from 1.4 to 5.3.1 use an insecure HTTP URL to download dependencies when the built-in JavaScript or CoffeeScript Gradle plugins are used. Dependency artifacts could have been maliciously compromised by a MITM attack against the ajax.googleapis.com web site.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\scala\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-15052,CWE-522 Insufficiently Protected Credentials,"The HTTP client in Gradle before 5.6 sends authentication credentials originally destined for the configured host. If that host returns a 30x redirect, Gradle also sends those credentials to all subsequent hosts that the request redirects to. This is similar to CVE-2018-1000007.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\scala\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-16370,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"The PGP signing plugin in Gradle before 6.0 relies on the SHA-1 algorithm, which might allow an attacker to replace an artifact with a different one that has the same SHA-1 message digest, a related issue to CVE-2005-4900.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\scala\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2020-11979,NVD-CWE-Other,"As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\scala\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-29428,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-379 Creation of Temporary File in Directory with Incorrect Permissions","In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the ""sticky"" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the ""sticky"" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.",NVD,MEDIUM,4.4,/AV:L/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.8,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\scala\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-29429,CWE-377 Insecure Temporary File,"In Gradle before version 7.0, files created with open permissions in the system temporary directory can allow an attacker to access information downloaded by Gradle. Some builds could be vulnerable to a local information disclosure. Remote files accessed through TextResourceFactory are downloaded into the system temporary directory first. Sensitive information contained in these files can be exposed to other local users on the same system. If you do not use the `TextResourceFactory` API, you are not vulnerable. As of Gradle 7.0, uses of the system temporary directory have been moved to the Gradle User Home directory. By default, this directory is restricted to the user running the build. As a workaround, set a more restrictive umask that removes read access to other users. When files are created in the system temporary directory, they will not be accessible to other users. If you are unable to change your system's umask, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only.",NVD,LOW,1.9,/AV:L/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\scala\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-32751,CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),"Gradle is a build tool with a focus on build automation. In versions prior to 7.2, start scripts generated by the `application` plugin and the `gradlew` script are both vulnerable to arbitrary code execution when an attacker is able to change environment variables for the user running the script. This may impact those who use `gradlew` on Unix-like systems or use the scripts generated by Gradle in thieir application on Unix-like systems. For this vulnerability to be exploitable, an attacker needs to be able to set the value of particular environment variables and have those environment variables be seen by the vulnerable scripts. This issue has been patched in Gradle 7.2 by removing the use of `eval` and requiring the use of the `bash` shell. There are a few workarounds available. For CI/CD systems using the Gradle build tool, one may ensure that untrusted users are unable to change environment variables for the user that executes `gradlew`. If one is unable to upgrade to Gradle 7.2, one may generate a new `gradlew` script with Gradle 7.2 and use it for older versions of Gradle. Fpplications using start scripts generated by Gradle, one may ensure that untrusted users are unable to change environment variables for the user that executes the start script. A vulnerable start script could be manually patched to remove the use of `eval` or the use of environment variables that affect the application's command-line. If the application is simple enough, one may be able to avoid the use of the start scripts by running the application directly with Java command.",NVD,HIGH,8.5,/AV:N/AC:M/Au:S/C:C/I:C/A:C,HIGH,7.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2012-6708,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery before 1.9.0 is vulnerable to Cross-site Scripting (XSS) attacks. The jQuery(strInput) function does not differentiate selectors from HTML in a reliable fashion. In vulnerable versions, jQuery determined whether the input was HTML by looking for the '<' character anywhere in the string, giving attackers more flexibility when attempting to construct a malicious payload. In fixed versions, jQuery only deems the input to be HTML if it explicitly starts with the '<' character, limiting exploitability only to attackers who can control the beginning of a string, which is far less common.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2015-9251,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery before 3.0.0 is vulnerable to Cross-site Scripting (XSS) attacks when a cross-domain Ajax request is performed without the dataType option, causing text/javascript responses to be executed.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2019-11358,CWE-1321,"jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2020-11022,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2020-11023,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: xmlsec-1.5.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\xmlsec-1.5.1.jar,"Apache XML Security for Java supports XML-Signature Syntax and Processing,         W3C Recommendation 12 February 2002, and XML Encryption Syntax and         Processing, W3C Recommendation 10 December 2002. As of version 1.4,         the library supports the standard Java API JSR-105: XML Digital Signature APIs.","The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",ecf0046cfea8b48a12a6063396b2ca67,bbf5d96a49a2b58b8988202a3c8728461639090e,pkg:maven/org.apache.santuario/xmlsec@1.5.1,"cpe:2.3:a:apache:santuario_xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*",CVE-2013-2172,CWE-310 Cryptographic Issues,"jcp/xml/dsig/internal/dom/DOMCanonicalizationMethod.java in Apache Santuario XML Security for Java 1.4.x before 1.4.8 and 1.5.x before 1.5.5 allows context-dependent attackers to spoof an XML Signature by using the CanonicalizationMethod parameter to specify an arbitrary weak ""canonicalization algorithm to apply to the SignedInfo part of the Signature.""",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,"","","",HIGH,38
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: xmlsec-1.5.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\xmlsec-1.5.1.jar,"Apache XML Security for Java supports XML-Signature Syntax and Processing,         W3C Recommendation 12 February 2002, and XML Encryption Syntax and         Processing, W3C Recommendation 10 December 2002. As of version 1.4,         the library supports the standard Java API JSR-105: XML Digital Signature APIs.","The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",ecf0046cfea8b48a12a6063396b2ca67,bbf5d96a49a2b58b8988202a3c8728461639090e,pkg:maven/org.apache.santuario/xmlsec@1.5.1,"cpe:2.3:a:apache:santuario_xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*",CVE-2013-4517,CWE-399 Resource Management Errors,"Apache Santuario XML Security for Java before 1.5.6, when applying Transforms, allows remote attackers to cause a denial of service (memory consumption) via crafted Document Type Definitions (DTDs), related to signatures.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,"","","",HIGH,38
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: xmlsec-1.5.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\xmlsec-1.5.1.jar,"Apache XML Security for Java supports XML-Signature Syntax and Processing,         W3C Recommendation 12 February 2002, and XML Encryption Syntax and         Processing, W3C Recommendation 10 December 2002. As of version 1.4,         the library supports the standard Java API JSR-105: XML Digital Signature APIs.","The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",ecf0046cfea8b48a12a6063396b2ca67,bbf5d96a49a2b58b8988202a3c8728461639090e,pkg:maven/org.apache.santuario/xmlsec@1.5.1,"cpe:2.3:a:apache:santuario_xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*",CVE-2013-5823,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect availability via unknown vectors related to Security.",OSSINDEX,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,"","","",HIGH,38
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",appl-configuratoreapi-rest.war: xmlsec-1.5.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest.war\WEB-INF\lib\xmlsec-1.5.1.jar,"Apache XML Security for Java supports XML-Signature Syntax and Processing,         W3C Recommendation 12 February 2002, and XML Encryption Syntax and         Processing, W3C Recommendation 10 December 2002. As of version 1.4,         the library supports the standard Java API JSR-105: XML Digital Signature APIs.","The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",ecf0046cfea8b48a12a6063396b2ca67,bbf5d96a49a2b58b8988202a3c8728461639090e,pkg:maven/org.apache.santuario/xmlsec@1.5.1,"cpe:2.3:a:apache:santuario_xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*",CVE-2021-40690,CWE-200 Information Exposure,"All versions of Apache Santuario - XML Security for Java prior to 2.2.3 and 2.1.7 are vulnerable to an issue where the ""secureValidation"" property is not passed correctly when creating a KeyInfo from a KeyInfoReference element. This allows an attacker to abuse an XPath Transform to extract any local .xml files in a RetrievalMethod element.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,38
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2015-6644,CWE-200 Information Exposure,"Bouncy Castle in Android before 5.1.1 LMY49F and 6.0 before 2016-01-01 allows attackers to obtain sensitive information via a crafted application, aka internal bug 24106146.",OSSINDEX,"","","",LOW,3.3,CVSS:/AV:L/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000338,CWE-347 Improper Verification of Cryptographic Signature,"In Bouncy Castle JCE Provider version 1.55 and earlier the DSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000339,CWE-310 Cryptographic Issues,In the Bouncy Castle JCE Provider version 1.55 and earlier the primary engine class used for AES was AESFastEngine. Due to the highly table driven approach used in the algorithm it turns out that if the data channel on the CPU can be monitored the lookup table accesses are sufficient to leak information on the AES key being used. There was also a leak in AESEngine although it was substantially less. AESEngine has been modified to remove any signs of leakage (testing carried out on Intel X86-64) and is now the primary AES class for the BC JCE provider from 1.56. Use of AESFastEngine is now only recommended where otherwise deemed appropriate.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000340,CWE-19 Data Processing Errors,"In the Bouncy Castle JCE Provider versions 1.51 to 1.55, a carry propagation bug was introduced in the implementation of squaring for several raw math classes have been fixed (org.bouncycastle.math.raw.Nat???). These classes are used by our custom elliptic curve implementations (org.bouncycastle.math.ec.custom.**), so there was the possibility of rare (in general usage) spurious calculations for elliptic curve scalar multiplications. Such errors would have been detected with high probability by the output validation for our scalar multipliers.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000341,CWE-361 7PK - Time and State,"In the Bouncy Castle JCE Provider version 1.55 and earlier DSA signature generation is vulnerable to timing attack. Where timings can be closely observed for the generation of signatures, the lack of blinding in 1.55, or earlier, may allow an attacker to gain information about the signature's k value and ultimately the private value as well.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000342,CWE-347 Improper Verification of Cryptographic Signature,"In the Bouncy Castle JCE Provider version 1.55 and earlier ECDSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000343,CWE-310 Cryptographic Issues,"In the Bouncy Castle JCE Provider version 1.55 and earlier the DSA key pair generator generates a weak private key if used with default values. If the JCA key pair generator is not explicitly initialised with DSA parameters, 1.55 and earlier generates a private value assuming a 1024 bit key size. In earlier releases this can be dealt with by explicitly passing parameters to the key pair generator.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000344,CWE-310 Cryptographic Issues,In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.,NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,HIGH,7.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000345,CWE-361 7PK - Time and State,"In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES/ECIES CBC mode vulnerable to padding oracle attack. For BC 1.55 and older, in an environment where timings can be easily observed, it is possible with enough observations to identify when the decryption is failing due to padding.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000346,CWE-320 Key Management Errors,In the Bouncy Castle JCE Provider version 1.55 and earlier the other party DH public key is not fully validated. This can cause issues as invalid keys can be used to reveal details about the other party's private key where static Diffie-Hellman is in use. As of release 1.56 the key parameters are checked on agreement calculation.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,LOW,3.7,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2016-1000352,CWE-310 Cryptographic Issues,In the Bouncy Castle JCE Provider version 1.55 and earlier the ECIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.,NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,HIGH,7.4,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2017-13098,CWE-203 Information Exposure Through Discrepancy,"BouncyCastle TLS prior to version 1.0.3, when configured to use the JCE (Java Cryptography Extension) for cryptographic functions, provides a weak Bleichenbacher oracle when any TLS cipher suite using RSA key exchange is negotiated. An attacker can recover the private key from a vulnerable application. This vulnerability is referred to as ""ROBOT.""",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2020-0187,CWE-310 Cryptographic Issues,"In engineSetMode of BaseBlockCipher.java, there is a possible incorrect cryptographic algorithm chosen due to an incomplete comparison. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-148517383",OSSINDEX,MEDIUM,5.5,/AV:L/AC:L/Au:/C:H/I:N/A:N,"","","",HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2020-15522,CWE-362 Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition'),"Bouncy Castle BC Java before 1.66, BC C# .NET before 1.8.7, BC-FJA before 1.0.1.2, 1.0.2.1, and BC-FNA before 1.0.1.1 have a timing issue within the EC math library that can expose information about the private key when an attacker is able to observe timing information for the generation of multiple deterministic ECDSA signatures.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",bcprov-jdk15on-151.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\bcprov-jdk15on-151.jar,The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.,Bouncy Castle Licence: http://www.bouncycastle.org/licence.html,b202b2dde200e0d1b714f6e867e29ee4,9ab8afcc2842d5ef06eb775a0a2b12783b99aa80,pkg:maven/org.bouncycastle/bcprov-jdk15on@1.51,"cpe:2.3:a:bouncycastle:bouncy-castle-crypto-package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:bouncy_castle_crypto_package:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:legion-of-the-bouncy-castle-java-crytography-api:1.51:*:*:*:*:*:*:*, cpe:2.3:a:bouncycastle:the_bouncy_castle_crypto_package_for_java:1.51:*:*:*:*:*:*:*",CVE-2020-26939,CWE-203 Information Exposure Through Discrepancy,"In Legion of the Bouncy Castle BC before 1.61 and BC-FJA before 1.0.1.2, attackers can obtain sensitive information about a private exponent because of Observable Differences in Behavior to Error Inputs. This occurs in org.bouncycastle.crypto.encodings.OAEPEncoding. Sending invalid ciphertext that decrypts to a short payload in the OAEP Decoder could result in the throwing of an early exception, potentially leaking some information about the private exponent of the RSA private key performing the encryption.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,HIGH,53
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2021-38542,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2021-40110,NVD-CWE-Other,"In Apache James, using Jazzer fuzzer, we identified that an IMAP user can craft IMAP LIST commands to orchestrate a Denial Of Service using a vulnerable Regular expression. This affected Apache James prior to 3.6.1 We recommend upgrading to Apache James 3.6.1 or higher , which enforce the use of RE2J regular expression engine to execute regex in linear time without back-tracking.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2021-40111,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"In Apache James, while fuzzing with Jazzer the IMAP parsing stack, we discover that crafted APPEND and STATUS IMAP command could be used to trigger infinite loops resulting in expensive CPU computations and OutOfMemory exceptions. This can be used for a Denial Of Service attack. The IMAP user needs to be authenticated to exploit this vulnerability. This affected Apache James prior to version 3.6.1. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2021-40525,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Apache James ManagedSieve implementation alongside with the file storage for sieve scripts is vulnerable to path traversal, allowing reading and writing any file. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade. Distributed and Cassandra based products are also not impacted.",NVD,MEDIUM,6.4,/AV:N/AC:L/Au:N/C:P/I:P/A:N,CRITICAL,9.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang-2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang-2.6.jar,"Commons Lang, a package of Java utility classes for the         classes that are in java.lang's hierarchy, or are considered to be so         standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,4d5c1693079575b362edf41500630bbd,0ce1edb914c94ebc388f086c6827e8bdeec71ac2,pkg:maven/commons-lang/commons-lang@2.6,cpe:2.3:a:apache:james:2.6:*:*:*:*:*:*:*,CVE-2022-28220,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),"Apache James prior to release 3.6.3 and 3.7.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. Fix of CVE-2021-38542, which solved similar problem fron Apache James 3.6.1, is subject to a parser differential and do not take into account concurrent requests.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,121
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2021-38542,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2021-40110,NVD-CWE-Other,"In Apache James, using Jazzer fuzzer, we identified that an IMAP user can craft IMAP LIST commands to orchestrate a Denial Of Service using a vulnerable Regular expression. This affected Apache James prior to 3.6.1 We recommend upgrading to Apache James 3.6.1 or higher , which enforce the use of RE2J regular expression engine to execute regex in linear time without back-tracking.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2021-40111,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"In Apache James, while fuzzing with Jazzer the IMAP parsing stack, we discover that crafted APPEND and STATUS IMAP command could be used to trigger infinite loops resulting in expensive CPU computations and OutOfMemory exceptions. This can be used for a Denial Of Service attack. The IMAP user needs to be authenticated to exploit this vulnerability. This affected Apache James prior to version 3.6.1. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2021-40525,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Apache James ManagedSieve implementation alongside with the file storage for sieve scripts is vulnerable to path traversal, allowing reading and writing any file. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade. Distributed and Cassandra based products are also not impacted.",NVD,MEDIUM,6.4,/AV:N/AC:L/Au:N/C:P/I:P/A:N,CRITICAL,9.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",commons-lang3-3.2.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\commons-lang3-3.2.1.jar,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.",http://www.apache.org/licenses/LICENSE-2.0.txt,7fc4221e7e3a05d8052d3fbb34fb0a5a,66f13681add50ca9e4546ffabafaaac7645db3cf,pkg:maven/org.apache.commons/commons-lang3@3.2.1,cpe:2.3:a:apache:james:3.2.1:*:*:*:*:*:*:*,CVE-2022-28220,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),"Apache James prior to release 3.6.3 and 3.7.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. Fix of CVE-2021-38542, which solved similar problem fron Apache James 3.6.1, is subject to a parser differential and do not take into account concurrent requests.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,119
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",csi-java-swagger-codegen-1.0.0.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\csi-java-swagger-codegen-1.0.0.jar,"","",b2be21b9ea879b591e966995638ea218,71edbfa110f8b9aff2a8a47c292a7aa341b2cf38,pkg:maven/io.swagger/csi-java-swagger-codegen@1.0.0,cpe:2.3:a:swagger:swagger-codegen:1.0.0:*:*:*:*:*:*:*,CVE-2017-1000207,CWE-502 Deserialization of Untrusted Data,"A vulnerability in Swagger-Parser's version <= 1.0.30 and Swagger codegen version <= 2.2.2 yaml parsing functionality results in arbitrary code being executed when a maliciously crafted yaml Open-API specification is parsed. This in particular, affects the 'generate' and 'validate' command in swagger-codegen (<= 2.2.2) and can lead to arbitrary code being executed when these commands are used on a well-crafted yaml specification.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,18
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",csi-java-swagger-codegen-1.0.0.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\csi-java-swagger-codegen-1.0.0.jar,"","",b2be21b9ea879b591e966995638ea218,71edbfa110f8b9aff2a8a47c292a7aa341b2cf38,pkg:maven/io.swagger/csi-java-swagger-codegen@1.0.0,cpe:2.3:a:swagger:swagger-codegen:1.0.0:*:*:*:*:*:*:*,CVE-2017-1000208,CWE-502 Deserialization of Untrusted Data,"A vulnerability in Swagger-Parser's (version <= 1.0.30) yaml parsing functionality results in arbitrary code being executed when a maliciously crafted yaml Open-API specification is parsed. This in particular, affects the 'generate' and 'validate' command in swagger-codegen (<= 2.2.2) and can lead to arbitrary code being executed when these commands are used on a well-crafted yaml specification.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,18
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-12624,CWE-19 Data Processing Errors,"Apache CXF supports sending and receiving attachments via either the JAX-WS or JAX-RS specifications. It is possible to craft a message attachment header that could lead to a Denial of Service (DoS) attack on a CXF web service provider. Both JAX-WS and JAX-RS services are vulnerable to this attack. From Apache CXF 3.2.1 and 3.1.14, message attachment headers that are greater than 300 characters will be rejected by default. This value is configurable via the property ""attachment-max-header-size"".",OSSINDEX,"","","",MEDIUM,5.5,CVSS:/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-api:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-api/pom.xml,Apache CXF API,"",e7fc27a5e2030eed0e83fa86da94ed8c,f3b5947ffdc14174c3ed2670360db18648385e23,pkg:maven/org.apache.cxf/cxf-api@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-coloc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-coloc/pom.xml,Apache CXF Runtime Colocated Binding,"",9a48fbb68352595e8f9e6f58346320a2,7de522b74b53f0fb23f1bc4e3d2b2dc48c446fbb,pkg:maven/org.apache.cxf/cxf-rt-bindings-coloc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-corba/pom.xml,Apache CXF Runtime CORBA Binding,"",e77b91934b3dffc4390009f4cac309be,0ace4f8d461dae619eaf75de136a6a3c523f9348,pkg:maven/org.apache.cxf/cxf-rt-bindings-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-object:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-object/pom.xml,Apache CXF Runtime Object Binding,"",ff0edc981476388dd27e6d156c013eeb,9d70be43796d0e74088aab7933b52bc611259e2e,pkg:maven/org.apache.cxf/cxf-rt-bindings-object@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-soap:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-soap/pom.xml,Apache CXF Runtime SOAP Binding,"",4dcbdb97bfdd01481641dc0fe43ab5e0,44e691c10bec2c713d53230a805a2faa780abf5a,pkg:maven/org.apache.cxf/cxf-rt-bindings-soap@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-bindings-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-bindings-xml/pom.xml,Apache CXF Runtime XML Binding,"",ef9e2ed45e557d0706894daa4f2c6888,b0dce6f121fb6d2c0406221265ba217da5690290,pkg:maven/org.apache.cxf/cxf-rt-bindings-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-core/pom.xml,Apache CXF Runtime Core,"",787c7adde85f4149904432e9f798eaa0,f798e553dcb3e510b11e916a82fd1fe9adc21099,pkg:maven/org.apache.cxf/cxf-rt-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-aegis:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-aegis/pom.xml,Apache CXF Runtime Aegis Databinding,"",a7babe955c6246870cb45c73165e0279,b8b23de01ee237e3ae08e5b4324640f94fa4d7b5,pkg:maven/org.apache.cxf/cxf-rt-databinding-aegis@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jaxb/pom.xml,Apache CXF Runtime JAXB DataBinding,"",44c95c5f71637da7e5db87ce18328336,1e45fad45328fea85cf403f6337fdbb069907923,pkg:maven/org.apache.cxf/cxf-rt-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-jibx:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-jibx/pom.xml,Apache CXF Runtime JiBX DataBinding,"",6e09766ff9b1a07d47b6fb2700f94ccf,d622f7d48f60e4fbd8859499625b8e3cfa133c0c,pkg:maven/org.apache.cxf/cxf-rt-databinding-jibx@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-sdo:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-sdo/pom.xml,Apache CXF Runtime SDO DataBinding,"",871ddb1af510f6cdc91414ed0eea1127,53a9bab0cb67f87cc700c1efc4acb298d19e1e57,pkg:maven/org.apache.cxf/cxf-rt-databinding-sdo@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-databinding-xmlbeans:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-databinding-xmlbeans/pom.xml,Apache CXF Runtime XmlBeans DataBinding,"",827a441ca920fc08edd391a4c513672d,f3405c635a38b299c697a982d6c3b798aec79d84,pkg:maven/org.apache.cxf/cxf-rt-databinding-xmlbeans@2.7.14,"cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*, cpe:2.3:a:apache:xmlbeans:2.7.14:*:*:*:*:*:*:*",CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-features-clustering:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-features-clustering/pom.xml,Failover and loadbalancing support,"",622f8737a7761837d36a26345e61a156,40580fdca9627009f084324c1eaf570ed83a04f4,pkg:maven/org.apache.cxf/cxf-rt-features-clustering@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-12624,CWE-19 Data Processing Errors,"Apache CXF supports sending and receiving attachments via either the JAX-WS or JAX-RS specifications. It is possible to craft a message attachment header that could lead to a Denial of Service (DoS) attack on a CXF web service provider. Both JAX-WS and JAX-RS services are vulnerable to this attack. From Apache CXF 3.2.1 and 3.1.14, message attachment headers that are greater than 300 characters will be rejected by default. This value is configurable via the property ""attachment-max-header-size"".",OSSINDEX,"","","",MEDIUM,5.5,CVSS:/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxrs/pom.xml,Apache CXF Runtime JAX-RS Frontend,"",30a99785f90e13d268a369ff69b67449,309ba83e97605a02dc7bfdbb6ea4447f96edd8e1,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-jaxws/pom.xml,Apache CXF Runtime JAX-WS Frontend,"",05c1dc2c9a71a28acd320bd74f1b897e,87310ab2f76fb1151ca36986161fec3579837271,pkg:maven/org.apache.cxf/cxf-rt-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-js:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-js/pom.xml,Apache CXF Runtime JavaScript Frontend,"",032daf9f18bc1363b62c712c7915e230,4c496733a410e5f71b609fd4f5a6e2ce2b83d06e,pkg:maven/org.apache.cxf/cxf-rt-frontend-js@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-frontend-simple:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-frontend-simple/pom.xml,Apache CXF Runtime Simple Frontend,"",fadbffc95596efb91184fb10e84dd835,0924a1549a85ec0a77a0802f4e09cf1961b09c26,pkg:maven/org.apache.cxf/cxf-rt-frontend-simple@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-javascript/pom.xml,Apache CXF Runtime JavaScript Client Generator,"",71b170dd2ab55e2cb65f3e2708d08bff,ffc3e8e155c360d86bda224e70c9f44d9fbc1f33,pkg:maven/org.apache.cxf/cxf-rt-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-management:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-management/pom.xml,Apache CXF Runtime Management,"",fee76b38753eff72b6a79422b6f9e5e2,26042f2ac26aebd18136f56e887b24ffb0377e2a,pkg:maven/org.apache.cxf/cxf-rt-management@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-providers:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-providers/pom.xml,Apache CXF JAX-RS Extensions: Providers,"",0a6643bd3d13647fbded2a43f414a201,63b7feabe24bbbff051e905c0d8bc8de8b2d4f19,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-providers@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-extension-search:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-extension-search/pom.xml,Apache CXF JAX-RS Extensions: Search,"",40e55b3138d6c61ee70e8afe97a144ef,e8ef61a7606aafa7790f167761e2009c63c3d50d,pkg:maven/org.apache.cxf/cxf-rt-rs-extension-search@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-cors:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-cors/pom.xml,Apache CXF RS XML Security,"",b0a604d6a7c5551f1a90fad10ab74216,e54afe46df206eff5b32221ec5e496fddee89897,pkg:maven/org.apache.cxf/cxf-rt-rs-security-cors@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12419,CWE-863 Incorrect Authorization,"Apache CXF before 3.3.4 and 3.2.11 provides all of the components that are required to build a fully fledged OpenId Connect service. There is a vulnerability in the access token services, where it does not validate that the authenticated principal is equal to that of the supplied clientId parameter in the request. If a malicious client was able to somehow steal an authorization code issued to another client, then they could exploit this vulnerability to obtain an access token for the other client.",OSSINDEX,HIGH,9.8,/AV:N/AC:L/Au:/C:H/I:H/A:H,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth2:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth2/pom.xml,Apache CXF Runtime OAuth 2.0,"",7c28bd5b0aaaeda0229f1f3342676e4c,738d72a5aef552b5cab9d59b2a8c3087b85edf57,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth2@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-oauth:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-oauth/pom.xml,Apache CXF Runtime OAuth 1.0a,"",68ea37cb8f64d15db47dd5cbddb2f437,51f1ce6b76ab7320ea7231c8e32beb930fd5113b,pkg:maven/org.apache.cxf/cxf-rt-rs-security-oauth@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-rs-security-xml:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-rs-security-xml/pom.xml,Apache CXF RS XML Security,"",2afd4171c0e5c428f27efc4aaf32ce42,a5764351958ebb5db7efeb25ab594cfcdf117e69,pkg:maven/org.apache.cxf/cxf-rt-rs-security-xml@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-security/pom.xml,Apache CXF Runtime Security functionality,"",b598fb6df0126a93525d896742d0f73e,db67c510be3594790d64e7c2a4436e0c1044512c,pkg:maven/org.apache.cxf/cxf-rt-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-hc:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-hc/pom.xml,Apache CXF Runtime HTTP Async Transport,"",f2c45675555cc5b2d72408d74b4c5846,764191b42efcaaceffc3e3e724304c9e644e369d,pkg:maven/org.apache.cxf/cxf-rt-transports-http-hc@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http-jetty:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http-jetty/pom.xml,Apache CXF Runtime HTTP Jetty Transport,"",13ead1152079280caa92ae0bd910776b,c25c0e0f3bbed32dd7a6c110ea658fe4f9a2f285,pkg:maven/org.apache.cxf/cxf-rt-transports-http-jetty@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-17573,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack, which allows a malicious actor to inject javascript into the web page. Please note that the attack exploits a feature which is not typically not present in modern browsers, who remove dot segments before sending the request. However, Mobile applications may be vulnerable.",OSSINDEX,MEDIUM,6.1,/AV:N/AC:L/Au:/C:L/I:L/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-http:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-http/pom.xml,Apache CXF Runtime HTTP Transport,"",452371f07af3c70855041b05d7fbda54,4d1636d1ab4d81b691148b583585cf5547eb1e26,pkg:maven/org.apache.cxf/cxf-rt-transports-http@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-jms:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-jms/pom.xml,Apache CXF Runtime JMS Transport,"",aa194bc14d1ad705e841edd416090c23,68abb87a6c391fd827ee9519eca996c1e9ffde7d,pkg:maven/org.apache.cxf/cxf-rt-transports-jms@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-local:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-local/pom.xml,Apache CXF Runtime Local Transport,"",ae34542d843a18348e97220f8954da4b,43b1caf15a882f2f3a822af03325e76ce2087648,pkg:maven/org.apache.cxf/cxf-rt-transports-local@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-transports-udp:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-transports-udp/pom.xml,Apache CXF Runtime UDP Transport,"",17e8db6132ca04010c12f45dd139db68,ae033ce511b5e792deb5ef5becbf9ac14b2448f8,pkg:maven/org.apache.cxf/cxf-rt-transports-udp@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-addr:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-addr/pom.xml,Apache CXF Runtime WS Addressing,"",5e781b2df1a248791614d492b52ccefa,eded930694c3078e5135af4c344af48c42551bf3,pkg:maven/org.apache.cxf/cxf-rt-ws-addr@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-mex:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-mex/pom.xml,Apache CXF Runtime WS MetadataExchange,"",f76e51107d404cccdbbb142b5cdc2699,23d9c6431d941948ee17a180fb20ed0772aeb9c9,pkg:maven/org.apache.cxf/cxf-rt-ws-mex@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-policy:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-policy/pom.xml,Apache CXF Runtime WS Policy,"",52749dbf61398458906f24ec4292efc3,d3895020f86551873fa4e71f2945f4ecabe08093,pkg:maven/org.apache.cxf/cxf-rt-ws-policy@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-rm:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-rm/pom.xml,Apache CXF Runtime WS Reliable Messaging,"",40a05954c8a1abbb51db0cc4772d329e,a063ad697bf36a970b4a872436887215f8941545,pkg:maven/org.apache.cxf/cxf-rt-ws-rm@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-5656,CWE-384 Session Fixation,"Apache CXF's STSClient before 3.1.11 and 3.0.13 uses a flawed way of caching tokens that are associated with delegation tokens, which means that an attacker could craft a token which would return an identifer corresponding to a cached token for another user.",OSSINDEX,"","","",HIGH,7.5,CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-rt-ws-security:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-rt-ws-security/pom.xml,Apache CXF Runtime WS Security,"",89e40b50692ab76cdadb884675ac9f0a,fe90d83cc49b2a2c611fc608c3eec841e2d34449,pkg:maven/org.apache.cxf/cxf-rt-ws-security@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,13
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-common:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-common/pom.xml,Apache CXF Command Line Tools Common,"",1dcb426358fc741fdd0bb028600d9888,9cdbf1a7b3015f690fe727ed57247140e31d49a1,pkg:maven/org.apache.cxf/cxf-tools-common@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-corba:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-corba/pom.xml,Apache CXF Command Line Tools CORBA,"",1240a329e0717c53f57d597ac57523c3,4146d8823e68b3ba785bd2e90917e33dd6962570,pkg:maven/org.apache.cxf/cxf-tools-corba@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-java2ws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-java2ws/pom.xml,Apache CXF Command Line Tools JavaTo WS,"",46d385ed9896d0b65f27cb2838ce1f1d,1b7aa82a53f0585b2718a4c8aab736e45f6c13f7,pkg:maven/org.apache.cxf/cxf-tools-java2ws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-misctools:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-misctools/pom.xml,Apache CXF Command Line Tools WSDLTo Misctools,"",4c872e279ac81ef01f77d91ca9d02039,42fa6c4d65f7a3de9709144707f8acb153c9f654,pkg:maven/org.apache.cxf/cxf-tools-misctools@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-validator:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-validator/pom.xml,Apache CXF Command Line Tools Validator,"",a51c39bd9d69921e69b3fee57ab7121c,53251dfb511dccac66d5cb15a47fab817b36a782,pkg:maven/org.apache.cxf/cxf-tools-validator@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wadlto-jaxrs:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wadlto-jaxrs/pom.xml,Apache CXF Command Line Tools WADLTo JAXRS Frontend,"",910defa67767e33f9b72dd2883695cf5,3daa286ed5e7572e50f81637e9979c03f2665a9d,pkg:maven/org.apache.cxf/cxf-tools-wadlto-jaxrs@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-core:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-core/pom.xml,Apache CXF Command Line Tools WSDLTo Core,"",e24277ccad50c4686e7903e190e83571,a268500b4f52258bb82c778abde38eeb813ea531,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-core@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/pom.xml,Apache CXF Command Line Tools WSDLTo JAXB Databinding,"",312b94d92c068e5e26bd70f4874face7,88a5122359f74c5efaf89e86368b21cfb734edcb,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-javascript:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/pom.xml,Apache CXF Command Line Tools WSDL to JavaScript Front End,"",f6fb08bfe67c208be52797f5e33e5205,67c6c01d05ce1358f7d3090d72244186e948643f,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-javascript@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/pom.xml,Apache CXF Command Line Tools WSDLTo JAXWS Frontend,"",0cd72ca74b7b812f2d49524498464a09,88d86c7315665b79db1744841fa765803f4376ae,pkg:maven/org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar (shaded: org.apache.cxf:cxf-wstx-msv-validation:2.7.14),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar\META-INF/maven/org.apache.cxf/cxf-wstx-msv-validation/pom.xml,Apache CXF Woodstox/MSV Schema Validation,"",bfbeab64cfc78f281dcdd68ad0a3d0f3,9c460fb8608ffa7a06bb148b94554cf44672addc,pkg:maven/org.apache.cxf/cxf-wstx-msv-validation@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2015-5253,"CWE-264 Permissions, Privileges, and Access Controls","The SAML Web SSO module in Apache CXF before 2.7.18, 3.0.x before 3.0.7, and 3.1.x before 3.1.3 allows remote authenticated users to bypass authentication via a crafted SAML response with a valid signed assertion, related to a ""wrapping attack.""",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:P/A:N,"","","",HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-6812,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),The HTTP transport module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 uses FormattedServiceListWriter to provide an HTML page which lists the names and absolute URL addresses of the available service endpoints. The module calculates the base URL using the current HttpServletRequest. The calculated base URL is used by FormattedServiceListWriter to build the service endpoint absolute URLs. If the unexpected matrix parameters have been injected into the request URL then these matrix parameters will find their way back to the client in the services list page which represents an XSS risk to the client.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2016-8739,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),The JAX-RS module in Apache CXF prior to 3.0.12 and 3.1.x prior to 3.1.9 provides a number of Atom JAX-RS MessageBodyReaders. These readers use Apache Abdera Parser which expands XML entities by default which represents a major XXE risk.,NVD,HIGH,7.8,/AV:N/AC:L/Au:N/C:C/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2017-3156,NVD-CWE-noinfo,The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2018-8039,CWE-755 Improper Handling of Exceptional Conditions,"It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12406,CWE-770 Allocation of Resources Without Limits or Throttling,"Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property ""attachment-max-count"".",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2019-12423,CWE-522 Insufficiently Protected Credentials,"Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter ""rs.security.keystore.type"" to ""jwk"". For this case all keys are returned in this file ""as is"", including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. ""oct"" keys, which contain secret keys, are not returned at all.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-13954,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2020-1954,NVD-CWE-noinfo,"Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.",NVD,LOW,2.9,/AV:A/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.3,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-22696,CWE-918 Server-Side Request Forgery (SSRF),"CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a ""request"" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the ""request_uri"" parameter. CXF was not validating the ""request_uri"" parameter (apart from ensuring it uses ""https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",cxf-2.7.14.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\cxf-2.7.14.jar,Apache CXF Bundle Jar,http://www.apache.org/licenses/LICENSE-2.0.txt,927e8550132afee69ee5a9117cee7d8a,337434b0c198dbf55a07618504f9092aa035ab9e,pkg:maven/org.apache.cxf/cxf-bundle@2.7.14,cpe:2.3:a:apache:cxf:2.7.14:*:*:*:*:*:*:*,CVE-2021-30468,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"A vulnerability in the JsonMapObjectReaderWriter of Apache CXF allows an attacker to submit malformed JSON to a web service, which results in the thread getting stuck in an infinite loop, consuming CPU indefinitely. This issue affects Apache CXF versions prior to 3.4.4; Apache CXF versions prior to 3.3.11.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,40
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",dom4j-1.6.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\dom4j-1.6.1.jar,dom4j: the flexible XML framework for Java,"",4d8f51d3fe3900efc6e395be48030d6d,5d3ccc056b6f056dbf0dddfdf43894b9065a8f94,"pkg:maven/dom4j/dom4j@1.6.1, pkg:maven/org.zenframework.z8.dependencies.commons/dom4j-1.6.1@2.0",cpe:2.3:a:dom4j_project:dom4j:1.6.1:*:*:*:*:*:*:*,CVE-2018-1000632,CWE-91 XML Injection (aka Blind XPath Injection),"dom4j version prior to version 2.1.1 contains a CWE-91: XML Injection vulnerability in Class: Element. Methods: addElement, addAttribute that can result in an attacker tampering with XML documents through XML injection. This attack appear to be exploitable via an attacker specifying attributes or elements in the XML document. This vulnerability appears to have been fixed in 2.1.1 or later.",OSSINDEX,HIGH,7.5,/AV:N/AC:L/Au:/C:N/I:H/A:N,"","","","HIGH, HIGHEST",137
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",dom4j-1.6.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\dom4j-1.6.1.jar,dom4j: the flexible XML framework for Java,"",4d8f51d3fe3900efc6e395be48030d6d,5d3ccc056b6f056dbf0dddfdf43894b9065a8f94,"pkg:maven/dom4j/dom4j@1.6.1, pkg:maven/org.zenframework.z8.dependencies.commons/dom4j-1.6.1@2.0",cpe:2.3:a:dom4j_project:dom4j:1.6.1:*:*:*:*:*:*:*,CVE-2020-10683,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),"dom4j before 2.0.3 and 2.1.x before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"HIGH, HIGHEST",137
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",guava-20.0.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\guava-20.0.jar,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      Guava has only one code dependency - javax.annotation,     per the JSR-305 spec.",http://www.apache.org/licenses/LICENSE-2.0.txt,f32a8a2524620dbecc9f6bf6a20c293f,89507701249388e1ed5ddcf8c41f4ce1be7831ef,pkg:maven/com.google.guava/guava@20.0,cpe:2.3:a:google:guava:20.0:*:*:*:*:*:*:*,CVE-2018-10237,CWE-770 Allocation of Resources Without Limits or Throttling,"Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,21
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",guava-20.0.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\guava-20.0.jar,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      Guava has only one code dependency - javax.annotation,     per the JSR-305 spec.",http://www.apache.org/licenses/LICENSE-2.0.txt,f32a8a2524620dbecc9f6bf6a20c293f,89507701249388e1ed5ddcf8c41f4ce1be7831ef,pkg:maven/com.google.guava/guava@20.0,cpe:2.3:a:google:guava:20.0:*:*:*:*:*:*:*,CVE-2020-8908,CWE-732 Incorrect Permission Assignment for Critical Resource,"A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",NVD,LOW,2.1,/AV:L/AC:L/Au:N/C:P/I:N/A:N,LOW,3.3,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N,HIGH,21
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2019-11065,NVD-CWE-noinfo,Gradle versions from 1.4 to 5.3.1 use an insecure HTTP URL to download dependencies when the built-in JavaScript or CoffeeScript Gradle plugins are used. Dependency artifacts could have been maliciously compromised by a MITM attack against the ajax.googleapis.com web site.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2019-15052,CWE-522 Insufficiently Protected Credentials,"The HTTP client in Gradle before 5.6 sends authentication credentials originally destined for the configured host. If that host returns a 30x redirect, Gradle also sends those credentials to all subsequent hosts that the request redirects to. This is similar to CVE-2018-1000007.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2019-16370,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"The PGP signing plugin in Gradle before 6.0 relies on the SHA-1 algorithm, which might allow an attacker to replace an artifact with a different one that has the same SHA-1 message digest, a related issue to CVE-2005-4900.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2020-11979,NVD-CWE-Other,"As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2021-29428,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-379 Creation of Temporary File in Directory with Incorrect Permissions","In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the ""sticky"" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the ""sticky"" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.",NVD,MEDIUM,4.4,/AV:L/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.8,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2021-29429,CWE-377 Insecure Temporary File,"In Gradle before version 7.0, files created with open permissions in the system temporary directory can allow an attacker to access information downloaded by Gradle. Some builds could be vulnerable to a local information disclosure. Remote files accessed through TextResourceFactory are downloaded into the system temporary directory first. Sensitive information contained in these files can be exposed to other local users on the same system. If you do not use the `TextResourceFactory` API, you are not vulnerable. As of Gradle 7.0, uses of the system temporary directory have been moved to the Gradle User Home directory. By default, this directory is restricted to the user running the build. As a workaround, set a more restrictive umask that removes read access to other users. When files are created in the system temporary directory, they will not be accessible to other users. If you are unable to change your system's umask, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only.",NVD,LOW,1.9,/AV:L/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",hibernate-core-4.1.3.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\hibernate-core-4.1.3.Final-redhat-1.jar,"","",f9da1a0a9ad94472ee29510c6fb8ff4c,e0b0455a616ff8d5fd818c23a423ce359172b517,"",cpe:2.3:a:gradle:gradle:4.1.3:*:*:*:*:*:*:*,CVE-2021-32751,CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),"Gradle is a build tool with a focus on build automation. In versions prior to 7.2, start scripts generated by the `application` plugin and the `gradlew` script are both vulnerable to arbitrary code execution when an attacker is able to change environment variables for the user running the script. This may impact those who use `gradlew` on Unix-like systems or use the scripts generated by Gradle in thieir application on Unix-like systems. For this vulnerability to be exploitable, an attacker needs to be able to set the value of particular environment variables and have those environment variables be seen by the vulnerable scripts. This issue has been patched in Gradle 7.2 by removing the use of `eval` and requiring the use of the `bash` shell. There are a few workarounds available. For CI/CD systems using the Gradle build tool, one may ensure that untrusted users are unable to change environment variables for the user that executes `gradlew`. If one is unable to upgrade to Gradle 7.2, one may generate a new `gradlew` script with Gradle 7.2 and use it for older versions of Gradle. Fpplications using start scripts generated by Gradle, one may ensure that untrusted users are unable to change environment variables for the user that executes the start script. A vulnerable start script could be manually patched to remove the use of `eval` or the use of environment variables that affect the application's command-line. If the application is simple enough, one may be able to avoid the use of the start scripts by running the application directly with Java command.",NVD,HIGH,8.5,/AV:N/AC:M/Au:S/C:C/I:C/A:C,HIGH,7.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H,"",15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",hibernate-validator-4.2.0.Final-redhat-1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\hibernate-validator-4.2.0.Final-redhat-1.jar,Hibernate's Bean Validation (JSR-303) reference implementation.,http://www.apache.org/licenses/LICENSE-2.0.txt,c0a2c053ed18679d50e19c9794379157,28000d61b76062882626be06f3827a8c9cd7327f,pkg:maven/org.hibernate/hibernate-validator@4.2.0.Final-redhat-1,cpe:2.3:a:redhat:hibernate_validator:4.2.0.hat-1:*:*:*:*:*:*:*,CVE-2019-10219,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),A vulnerability was found in Hibernate-Validator. The SafeHtml validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions. This vulnerability can result in an XSS attack.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGH,38
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-core-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-core-2.6.2.jar,"Core Jackson abstractions, basic JSON streaming API implementation",http://www.apache.org/licenses/LICENSE-2.0.txt,5478388129427723d00ac8013b5b44a6,123f29333b2c6b3516b14252b6e93226bfcd6e37,pkg:maven/com.fasterxml.jackson.core/jackson-core@2.6.2,cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*,CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,45
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2017-15095,CWE-502 Deserialization of Untrusted Data,"A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2017-17485,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2017-7525,CWE-184 Incomplete Blacklist,"A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-11307,CWE-502 Deserialization of Untrusted Data,"An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-14718,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-14719,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-14720,"CWE-611 Improper Restriction of XML External Entity Reference ('XXE'), CWE-502 Deserialization of Untrusted Data",FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-14721,CWE-918 Server-Side Request Forgery (SSRF),FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,10.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-19360,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-19361,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-19362,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-5968,"CWE-502 Deserialization of Untrusted Data, CWE-184 Incomplete Blacklist",FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.,NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2018-7489,"CWE-502 Deserialization of Untrusted Data, CWE-184 Incomplete Blacklist","FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-14379,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,"SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup), leading to remote code execution.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-14540,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-16335,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-16942,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-16943,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2019-17531,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-10673,NVD-CWE-Other,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-25649,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),"A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-35490,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-35491,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2020-36518,CWE-787 Out-of-bounds Write,jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2022-42003,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. Additional fix version in 2.13.4.1 and 2.12.17.1",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-databind-2.6.2.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-databind-2.6.2.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,8796ce9083442314b2d68017562061a8,25c2196ddf53961b6dc862073187be51cb356fd3,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.6.2,"cpe:2.3:a:fasterxml:jackson-databind:2.6.2:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.6.2:*:*:*:*:*:*:*",CVE-2022-42004,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,41
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jackson-mapper-asl-1.9.9.redhat-4.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jackson-mapper-asl-1.9.9.redhat-4.jar,"",http://www.apache.org/licenses/LICENSE-2.0.txt,24cf9b39736fbd6f9243854fe14ab51c,d5ee59710c904c1d2d612f52da389e295617f50f,"",cpe:2.3:a:fasterxml:jackson-mapper-asl:1.9.9:*:*:*:*:*:*:*,CVE-2019-10172,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),A flaw was found in org.codehaus.jackson:jackson-mapper-asl:1.9.x libraries. XML external entity vulnerabilities similar CVE-2016-3720 also affects codehaus jackson-mapper-asl libraries but in different classes.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,"",20
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jettison-1.3.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jettison-1.3.1.jar,A StAX implementation for JSON.,"",ff4330f064a5eddcdc24a29d344a21cc,056dcc8480ecd2c03ec004aa76278d1f2d621561,pkg:maven/org.codehaus.jettison/jettison@1.3.1,cpe:2.3:a:jettison_project:jettison:1.3.1:*:*:*:*:*:*:*,CVE-2022-40149,CWE-787 Out-of-bounds Write,"Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",jettison-1.3.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\jettison-1.3.1.jar,A StAX implementation for JSON.,"",ff4330f064a5eddcdc24a29d344a21cc,056dcc8480ecd2c03ec004aa76278d1f2d621561,pkg:maven/org.codehaus.jettison/jettison@1.3.1,cpe:2.3:a:jettison_project:jettison:1.3.1:*:*:*:*:*:*:*,CVE-2022-40150,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by Out of memory. This effect may support a denial of service attack.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",postgresql-42.2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\postgresql-42.2.6.jar,Java JDBC 4.2 (JRE 8+) driver for PostgreSQL database,BSD-2-Clause: https://jdbc.postgresql.org/about/license.html,4bfbde0ae27a80912dd9664d86c1d934,58586d617d57746853fc0b8f37c83a8384fcd0ca,pkg:maven/org.postgresql/postgresql@42.2.6,cpe:2.3:a:postgresql:postgresql_jdbc_driver:42.2.6:*:*:*:*:*:*:*,CVE-2020-13692,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),PostgreSQL JDBC Driver (aka PgJDBC) before 42.2.13 allows XXE.,NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.7,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:H,HIGH,47
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",postgresql-42.2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\postgresql-42.2.6.jar,Java JDBC 4.2 (JRE 8+) driver for PostgreSQL database,BSD-2-Clause: https://jdbc.postgresql.org/about/license.html,4bfbde0ae27a80912dd9664d86c1d934,58586d617d57746853fc0b8f37c83a8384fcd0ca,pkg:maven/org.postgresql/postgresql@42.2.6,cpe:2.3:a:postgresql:postgresql_jdbc_driver:42.2.6:*:*:*:*:*:*:*,CVE-2022-21724,CWE-665 Improper Initialization,"pgjdbc is the offical PostgreSQL JDBC Driver. A security hole was found in the jdbc driver for postgresql database while doing security research. The system using the postgresql library will be attacked when attacker control the jdbc url or properties. pgjdbc instantiates plugin instances based on class names provided via `authenticationPluginClassName`, `sslhostnameverifier`, `socketFactory`, `sslfactory`, `sslpasswordcallback` connection properties. However, the driver did not verify if the class implements the expected interface before instantiating the class. This can lead to code execution loaded via arbitrary classes. Users using plugins are advised to upgrade. There are no known workarounds for this issue.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,47
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",postgresql-42.2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\postgresql-42.2.6.jar,Java JDBC 4.2 (JRE 8+) driver for PostgreSQL database,BSD-2-Clause: https://jdbc.postgresql.org/about/license.html,4bfbde0ae27a80912dd9664d86c1d934,58586d617d57746853fc0b8f37c83a8384fcd0ca,pkg:maven/org.postgresql/postgresql@42.2.6,cpe:2.3:a:postgresql:postgresql_jdbc_driver:42.2.6:*:*:*:*:*:*:*,CVE-2022-26520,CWE-20 Improper Input Validation,"** DISPUTED ** In pgjdbc before 42.3.3, an attacker (who controls the jdbc URL or properties) can call java.util.logging.FileHandler to write to arbitrary files through the loggerFile and loggerLevel connection properties. An example situation is that an attacker could create an executable JSP file under a Tomcat web root. NOTE: the vendor's position is that there is no pgjdbc vulnerability; instead, it is a vulnerability for any application to use the pgjdbc driver with untrusted connection properties.",OSSINDEX,HIGH,9.8,/AV:N/AC:L/Au:/C:H/I:H/A:H,"","","",HIGH,47
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",postgresql-42.2.6.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\postgresql-42.2.6.jar,Java JDBC 4.2 (JRE 8+) driver for PostgreSQL database,BSD-2-Clause: https://jdbc.postgresql.org/about/license.html,4bfbde0ae27a80912dd9664d86c1d934,58586d617d57746853fc0b8f37c83a8384fcd0ca,pkg:maven/org.postgresql/postgresql@42.2.6,cpe:2.3:a:postgresql:postgresql_jdbc_driver:42.2.6:*:*:*:*:*:*:*,CVE-2022-31197,CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),"PostgreSQL JDBC Driver (PgJDBC for short) allows Java programs to connect to a PostgreSQL database using standard, database independent Java code. The PGJDBC implementation of the `java.sql.ResultRow.refreshRow()` method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. `;`, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user. User applications that do not invoke the `ResultSet.refreshRow()` method are not impacted. User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the `refreshRow()` method on the ResultSet. Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user. Patched versions will be released as `42.2.26` and `42.4.1`. Users are advised to upgrade. There are no known workarounds for this issue.",NVD,"","","",HIGH,8.0,CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H,HIGH,47
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",sign-7.1.12.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\sign-7.1.12.jar,"","",3652bf7e3e1cd7e63c7b8d4d2e36760d,567c70eec13d09ef3469dc4c048d208a715372d2,pkg:maven/com.itextpdf/sign@7.1.12,cpe:2.3:a:itextpdf:itext:7.1.12:*:*:*:*:*:*:*,CVE-2021-43113,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),iTextPDF in iText 7 and up to 7.1.17 allows command injection via a CompareTool filename that is mishandled on the gs (aka Ghostscript) command line in GhostscriptHelper.java.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,19
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",sign-7.1.12.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\sign-7.1.12.jar,"","",3652bf7e3e1cd7e63c7b8d4d2e36760d,567c70eec13d09ef3469dc4c048d208a715372d2,pkg:maven/com.itextpdf/sign@7.1.12,cpe:2.3:a:itextpdf:itext:7.1.12:*:*:*:*:*:*:*,CVE-2022-24196,CWE-770 Allocation of Resources Without Limits or Throttling,"iText v7.1.17 was discovered to contain an out-of-memory error via the component readStreamBytesRaw, which allows attackers to cause a Denial of Service (DoS) via a crafted PDF file.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,19
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",sign-7.1.12.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\sign-7.1.12.jar,"","",3652bf7e3e1cd7e63c7b8d4d2e36760d,567c70eec13d09ef3469dc4c048d208a715372d2,pkg:maven/com.itextpdf/sign@7.1.12,cpe:2.3:a:itextpdf:itext:7.1.12:*:*:*:*:*:*:*,CVE-2022-24197,CWE-787 Out-of-bounds Write,"iText v7.1.17 was discovered to contain a stack-based buffer overflow via the component ByteBuffer.append, which allows attackers to cause a Denial of Service (DoS) via a crafted PDF file.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,19
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-0201,CWE-254 7PK - Security Features,"The Java SockJS client in Pivotal Spring Framework 4.1.x before 4.1.5 generates predictable session ids, which allows remote attackers to send messages to other sessions via unspecified vectors.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,"","","",HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-3192,CWE-119 Improper Restriction of Operations within the Bounds of a Memory Buffer,"Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not properly process inline DTD declarations when DTD is not entirely disabled, which allows remote attackers to cause a denial of service (memory consumption and out-of-memory errors) via a crafted XML file.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.5,CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-5211,CWE-552 Files or Directories Accessible to External Parties,"Under some situations, the Spring Framework 4.2.0 to 4.2.1, 4.0.0 to 4.1.7, 3.2.0 to 3.2.14 and older unsupported versions is vulnerable to a Reflected File Download (RFD) attack. The attack involves a malicious user crafting a URL with a batch script extension that results in the response being downloaded rather than rendered and also includes some input reflected in the response.",NVD,HIGH,9.3,/AV:N/AC:M/Au:N/C:C/I:C/A:C,CRITICAL,9.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2016-1000027,CWE-502 Deserialization of Untrusted Data,"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2016-5007,"CWE-264 Permissions, Privileges, and Access Controls","Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-11039,NVD-CWE-noinfo,"Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-11040,CWE-829 Inclusion of Functionality from Untrusted Control Sphere,"Spring Framework, versions 5.0.x prior to 5.0.7 and 4.3.x prior to 4.3.18 and older unsupported versions, allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through AbstractJsonpResponseBodyAdvice for REST controllers and MappingJackson2JsonView for browser requests. Both are not enabled by default in Spring Framework nor Spring Boot, however, when MappingJackson2JsonView is configured in an application, JSONP support is automatically ready to use through the ""jsonp"" and ""callback"" JSONP parameters, enabling cross-domain requests.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1257,NVD-CWE-noinfo,"Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1270,CWE-94 Improper Control of Generation of Code ('Code Injection'),"Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2020-5421,NVD-CWE-noinfo,"In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",NVD,LOW,3.6,/AV:N/AC:H/Au:S/C:P/I:P/A:N,MEDIUM,6.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22950,CWE-770 Allocation of Resources Without Limits or Throttling,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22965,CWE-94 Improper Control of Generation of Code ('Code Injection'),"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22968,CWE-178 Improper Handling of Case Sensitivity,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-core-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-core-4.1.2.RELEASE.jar,Spring Core,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1c2ee38654d1ecb827eb98702ac6e3f2,38428c53e7f1eb1cd2c028ffa17cb1e699083372,pkg:maven/org.springframework/spring-core@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22970,CWE-770 Allocation of Resources Without Limits or Throttling,"In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.",NVD,LOW,3.5,/AV:N/AC:M/Au:S/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,33
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-0201,CWE-254 7PK - Security Features,"The Java SockJS client in Pivotal Spring Framework 4.1.x before 4.1.5 generates predictable session ids, which allows remote attackers to send messages to other sessions via unspecified vectors.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,"","","",HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-3192,CWE-119 Improper Restriction of Operations within the Bounds of a Memory Buffer,"Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not properly process inline DTD declarations when DTD is not entirely disabled, which allows remote attackers to cause a denial of service (memory consumption and out-of-memory errors) via a crafted XML file.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.5,CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2015-5211,CWE-552 Files or Directories Accessible to External Parties,"Under some situations, the Spring Framework 4.2.0 to 4.2.1, 4.0.0 to 4.1.7, 3.2.0 to 3.2.14 and older unsupported versions is vulnerable to a Reflected File Download (RFD) attack. The attack involves a malicious user crafting a URL with a batch script extension that results in the response being downloaded rather than rendered and also includes some input reflected in the response.",NVD,HIGH,9.3,/AV:N/AC:M/Au:N/C:C/I:C/A:C,CRITICAL,9.6,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2016-1000027,CWE-502 Deserialization of Untrusted Data,"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2016-5007,"CWE-264 Permissions, Privileges, and Access Controls","Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-11039,NVD-CWE-noinfo,"Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-11040,CWE-829 Inclusion of Functionality from Untrusted Control Sphere,"Spring Framework, versions 5.0.x prior to 5.0.7 and 4.3.x prior to 4.3.18 and older unsupported versions, allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through AbstractJsonpResponseBodyAdvice for REST controllers and MappingJackson2JsonView for browser requests. Both are not enabled by default in Spring Framework nor Spring Boot, however, when MappingJackson2JsonView is configured in an application, JSONP support is automatically ready to use through the ""jsonp"" and ""callback"" JSONP parameters, enabling cross-domain requests.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1257,NVD-CWE-noinfo,"Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1270,CWE-94 Improper Control of Generation of Code ('Code Injection'),"Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2018-1272,"CWE-264 Permissions, Privileges, and Access Controls","Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.",OSSINDEX,HIGH,7.5,/AV:N/AC:H/Au:/C:H/I:H/A:H,"","","",HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2020-5421,NVD-CWE-noinfo,"In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",NVD,LOW,3.6,/AV:N/AC:H/Au:S/C:P/I:P/A:N,MEDIUM,6.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22950,CWE-770 Allocation of Resources Without Limits or Throttling,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22965,CWE-94 Improper Control of Generation of Code ('Code Injection'),"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22968,CWE-178 Improper Handling of Case Sensitivity,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",spring-web-4.1.2.RELEASE.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\spring-web-4.1.2.RELEASE.jar,Spring Web,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",e11e78241c72bac66f9d12ddace93832,aff4040103cac2f87fd4d0a88d31d1b62f07fe69,pkg:maven/org.springframework/spring-web@4.1.2.RELEASE,"cpe:2.3:a:pivotal_software:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:springsource:spring_framework:4.1.2:release:*:*:*:*:*:*, cpe:2.3:a:vmware:spring_framework:4.1.2:release:*:*:*:*:*:*",CVE-2022-22970,CWE-770 Allocation of Resources Without Limits or Throttling,"In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.",NVD,LOW,3.5,/AV:N/AC:M/Au:S/C:N/I:N/A:P,MEDIUM,5.3,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,34
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-annotations:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-annotations/pom.xml,"Core annotations used for value types, used by Jackson data binding package.","",aae98c6f8c355aa333afd3635f3d77e7,912620afe72203ec07af99b4fa03f655dbfdc4a5,pkg:maven/com.fasterxml.jackson.core/jackson-annotations@2.9.3,cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*,CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,16
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-core:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.xml,"Core Jackson processing abstractions (aka Streaming API), implementation for JSON","",c102598475d327960d1904c2124caee2,bab41c3beea2ffb9527099d51d7cd428a64e4ee5,pkg:maven/com.fasterxml.jackson.core/jackson-core@2.9.3,cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*,CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2017-17485,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-1000873,CWE-20 Improper Input Validation,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-11307,CWE-502 Deserialization of Untrusted Data,"An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-12022,CWE-502 Deserialization of Untrusted Data,"An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Jodd-db jar (for database access for the Jodd framework) in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",NVD,MEDIUM,5.1,/AV:N/AC:H/Au:N/C:P/I:P/A:P,HIGH,7.5,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-12023,CWE-502 Deserialization of Untrusted Data,"An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Oracle JDBC jar in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",NVD,MEDIUM,5.1,/AV:N/AC:H/Au:N/C:P/I:P/A:P,HIGH,7.5,CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-14718,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-14719,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-14720,"CWE-611 Improper Restriction of XML External Entity Reference ('XXE'), CWE-502 Deserialization of Untrusted Data",FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-14721,CWE-918 Server-Side Request Forgery (SSRF),FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,10.0,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-19360,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-19361,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-19362,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-5968,"CWE-502 Deserialization of Untrusted Data, CWE-184 Incomplete Blacklist",FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.,NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2018-7489,"CWE-502 Deserialization of Untrusted Data, CWE-184 Incomplete Blacklist","FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-12086,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-12384,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.9.1 might allow attackers to have a variety of impacts by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content, remote code execution may be possible.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-12814,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14379,CWE-915 Improperly Controlled Modification of Dynamically-Determined Object Attributes,"SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup), leading to remote code execution.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14439,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14540,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14892,CWE-502 Deserialization of Untrusted Data,"A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-14893,CWE-502 Deserialization of Untrusted Data,"A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-16335,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-16942,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-16943,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-17267,CWE-502 Deserialization of Untrusted Data,A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-17531,CWE-502 Deserialization of Untrusted Data,"A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2019-20330,CWE-502 Deserialization of Untrusted Data,FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-10672,NVD-CWE-Other,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory (aka aries.transaction.jms).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-10673,NVD-CWE-Other,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-10968,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.aoju.bus.proxy.provider.remoting.RmiProvider (aka bus-proxy).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-10969,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to javax.swing.JEditorPane.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11111,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.activemq.* (aka activemq-jms, activemq-core, activemq-pool, and activemq-pool-jms).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11112,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.proxy.provider.remoting.RmiProvider (aka apache/commons-proxy).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11113,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.openjpa.ee.WASRegistryManagedRuntime (aka openjpa).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11619,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.springframework.aop.config.MethodLocatingFactoryBean (aka spring-aop).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-11620,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.jelly.impl.Embedded (aka commons-jelly).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-14060,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.xalan.lib.sql.JNDIConnectionPool (aka apache/drill).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-14061,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oracle.jms.AQjmsQueueConnectionFactory, oracle.jms.AQjmsXATopicConnectionFactory, oracle.jms.AQjmsTopicConnectionFactory, oracle.jms.AQjmsXAQueueConnectionFactory, and oracle.jms.AQjmsXAConnectionFactory (aka weblogic/oracle-aqjms).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-14062,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-14195,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to org.jsecurity.realm.jndi.JndiRealmFactory (aka org.jsecurity).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-24616,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPDataSource (aka Anteros-DBCP).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-24750,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-25649,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),"A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-35490,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-35491,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-35728,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool (aka embedded Xalan in org.glassfish.web/javax.servlet.jsp.jstl).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36179,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36180,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36181,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36182,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36183,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36184,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36185,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36186,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36187,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36188,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36189,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource.",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-36518,CWE-787 Out-of-bounds Write,jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-8840,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-9546,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-9547,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2020-9548,CWE-502 Deserialization of Untrusted Data,"FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core).",NVD,MEDIUM,6.8,/AV:N/AC:M/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2021-20190,CWE-502 Deserialization of Untrusted Data,A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.,NVD,HIGH,8.3,/AV:N/AC:M/Au:N/C:P/I:P/A:C,HIGH,8.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2022-42003,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. Additional fix version in 2.13.4.1 and 2.12.17.1",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.3),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml,General data-binding functionality for Jackson: works on core streaming API,"",64ca8874195ce5f6da12c69daefe1c8d,1df41813b35160c44082e7ef54f2a4d0153acae2,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.3,"cpe:2.3:a:fasterxml:jackson-databind:2.9.3:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.9.3:*:*:*:*:*:*:*",CVE-2022-42004,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,15
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.google.guava:guava:18.0),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.google.guava/guava/pom.xml,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      Guava has only one code dependency - javax.annotation,     per the JSR-305 spec.","",e0eb52406b1a3b7ad2fda312c8a22bbd,2ec12f8d27a64e970b8be0fbd1d52dfec51cd41c,pkg:maven/com.google.guava/guava@18.0,cpe:2.3:a:google:guava:18.0:*:*:*:*:*:*:*,CVE-2018-10237,CWE-770 Allocation of Resources Without Limits or Throttling,"Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,9
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: com.google.guava:guava:18.0),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/com.google.guava/guava/pom.xml,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      Guava has only one code dependency - javax.annotation,     per the JSR-305 spec.","",e0eb52406b1a3b7ad2fda312c8a22bbd,2ec12f8d27a64e970b8be0fbd1d52dfec51cd41c,pkg:maven/com.google.guava/guava@18.0,cpe:2.3:a:google:guava:18.0:*:*:*:*:*:*:*,CVE-2020-8908,CWE-732 Incorrect Permission Assignment for Critical Resource,"A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",NVD,LOW,2.1,/AV:L/AC:L/Au:N/C:P/I:N/A:N,LOW,3.3,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N,HIGH,9
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2021-38542,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2021-40110,NVD-CWE-Other,"In Apache James, using Jazzer fuzzer, we identified that an IMAP user can craft IMAP LIST commands to orchestrate a Denial Of Service using a vulnerable Regular expression. This affected Apache James prior to 3.6.1 We recommend upgrading to Apache James 3.6.1 or higher , which enforce the use of RE2J regular expression engine to execute regex in linear time without back-tracking.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2021-40111,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"In Apache James, while fuzzing with Jazzer the IMAP parsing stack, we discover that crafted APPEND and STATUS IMAP command could be used to trigger infinite loops resulting in expensive CPU computations and OutOfMemory exceptions. This can be used for a Denial Of Service attack. The IMAP user needs to be authenticated to exploit this vulnerability. This affected Apache James prior to version 3.6.1. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2021-40525,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Apache James ManagedSieve implementation alongside with the file storage for sieve scripts is vulnerable to path traversal, allowing reading and writing any file. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade. Distributed and Cassandra based products are also not impacted.",NVD,MEDIUM,6.4,/AV:N/AC:L/Au:N/C:P/I:P/A:N,CRITICAL,9.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: commons-cli:commons-cli:1.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-cli/commons-cli/pom.xml,"Commons CLI provides a simple API for presenting, processing and validating a command line interface.","",98d0e8bed14d623fe40e4975ad351253,e1b71e4b511c3c63f8b19d0302fe1d1c6e79035a,pkg:maven/commons-cli/commons-cli@1.2,"cpe:2.3:a:apache:james:1.2:*:*:*:*:*:*:*, cpe:2.3:a:spirit-project:spirit:1.2:*:*:*:*:*:*:*",CVE-2022-28220,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),"Apache James prior to release 3.6.3 and 3.7.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. Fix of CVE-2021-38542, which solved similar problem fron Apache James 3.6.1, is subject to a parser differential and do not take into account concurrent requests.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,46
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: commons-io:commons-io:2.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/commons-io/commons-io/pom.xml,"The Commons IO library contains utility classes, stream implementations, file filters,  file comparators, endian transformation classes, and much more.","",a75b48557fe5da29195020755a5b1be7,9ece23effe8bce3904f3797a76b1ba6ab681e1b9,pkg:maven/commons-io/commons-io@2.4,cpe:2.3:a:apache:commons_io:2.4:*:*:*:*:*:*:*,CVE-2021-29425,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like ""//../foo"", or ""\\..\foo"", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus ""limited"" path traversal), if the calling code would use the result to construct a path value.",NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,MEDIUM,4.8,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N,HIGH,86
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2019-0228,CWE-611 Improper Restriction of XML External Entity Reference ('XXE'),"Apache PDFBox 2.0.14 does not properly initialize the XML parser, which allows context-dependent attackers to conduct XML External Entity (XXE) attacks via a crafted XFDF.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2021-38542,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2021-40110,NVD-CWE-Other,"In Apache James, using Jazzer fuzzer, we identified that an IMAP user can craft IMAP LIST commands to orchestrate a Denial Of Service using a vulnerable Regular expression. This affected Apache James prior to 3.6.1 We recommend upgrading to Apache James 3.6.1 or higher , which enforce the use of RE2J regular expression engine to execute regex in linear time without back-tracking.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2021-40111,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"In Apache James, while fuzzing with Jazzer the IMAP parsing stack, we discover that crafted APPEND and STATUS IMAP command could be used to trigger infinite loops resulting in expensive CPU computations and OutOfMemory exceptions. This can be used for a Denial Of Service attack. The IMAP user needs to be authenticated to exploit this vulnerability. This affected Apache James prior to version 3.6.1. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade.",NVD,MEDIUM,4.0,/AV:N/AC:L/Au:S/C:N/I:N/A:P,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2021-40525,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"Apache James ManagedSieve implementation alongside with the file storage for sieve scripts is vulnerable to path traversal, allowing reading and writing any file. This vulnerability had been patched in Apache James 3.6.1 and higher. We recommend the upgrade. Distributed and Cassandra based products are also not impacted.",NVD,MEDIUM,6.4,/AV:N/AC:L/Au:N/C:P/I:P/A:N,CRITICAL,9.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.apache.commons:commons-lang3:3.4),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.commons/commons-lang3/pom.xml,"Apache Commons Lang, a package of Java utility classes for the   classes that are in java.lang's hierarchy, or are considered to be so   standard as to justify existence in java.lang.","",5b94f12ccc8674526bc96c46c3899900,fd6eccbd05d55177e2f5e6d9da6f8d120751ab72,pkg:maven/org.apache.commons/commons-lang3@3.4,cpe:2.3:a:apache:james:3.4.0:*:*:*:*:*:*:*,CVE-2022-28220,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),"Apache James prior to release 3.6.3 and 3.7.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. Fix of CVE-2021-38542, which solved similar problem fron Apache James 3.6.1, is subject to a parser differential and do not take into account concurrent requests.",NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,102
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.apache.httpcomponents:httpclient:4.5.2),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.apache.httpcomponents/httpclient/pom.xml,Apache HttpComponents Client,"",71fd2a5a505554f3646f973a80c10b63,56f6338b324e438307e1f2c2b33bd02268310fc2,pkg:maven/org.apache.httpcomponents/httpclient@4.5.2,cpe:2.3:a:apache:httpclient:4.5.2:*:*:*:*:*:*:*,CVE-2020-13956,NVD-CWE-noinfo,Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,MEDIUM,5.3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N,HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.slf4j:slf4j-ext:1.7.12),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.slf4j/slf4j-ext/pom.xml,Extensions to the SLF4J API,"",dadb4b324ef7131af81df7b01748fb72,eca2134de49b6f8a5825e6ef8052e69fc3fddbcd,pkg:maven/org.slf4j/slf4j-ext@1.7.12,"",CVE-2018-8088,CWE-502 Deserialization of Untrusted Data,"org.slf4j.ext.EventData in the slf4j-ext module in QOS.CH SLF4J before 1.8.0-beta2 allows remote attackers to bypass intended access restrictions via crafted data. EventData in the slf4j-ext module in QOS.CH SLF4J, has been fixed in SLF4J versions 1.7.26 later and in the 2.0.x series.",OSSINDEX,HIGH,9.8,/AV:N/AC:L/Au:/C:H/I:H/A:H,"","","",HIGH,11
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2017-18640,CWE-776 Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion'),"The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-25857,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.,NVD,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-38749,CWE-787 Out-of-bounds Write,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",NVD,"","","",MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-38750,CWE-787 Out-of-bounds Write,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",NVD,"","","",MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-38751,CWE-787 Out-of-bounds Write,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",NVD,"","","",MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar (shaded: org.yaml:snakeyaml:1.15),D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\META-INF/maven/org.yaml/snakeyaml/pom.xml,YAML 1.1 parser and emitter for Java,Apache License Version 2.0: LICENSE.txt,d08d5404af612b74820e8b142595adfe,03fd9d02374faded0ab774348915a8e4f1bb72a5,pkg:maven/org.yaml/snakeyaml@1.15,"cpe:2.3:a:snakeyaml_project:snakeyaml:1.15:*:*:*:*:*:*:*, cpe:2.3:a:yaml_project:yaml:1.15:*:*:*:*:*:*:*",CVE-2022-38752,CWE-787 Out-of-bounds Write,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",NVD,"","","",MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H,HIGH,27
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2016-6199,CWE-502 Deserialization of Untrusted Data,ObjectSocketWrapper.java in Gradle 2.12 allows remote attackers to execute arbitrary code via a crafted serialized object.,NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-11065,NVD-CWE-noinfo,Gradle versions from 1.4 to 5.3.1 use an insecure HTTP URL to download dependencies when the built-in JavaScript or CoffeeScript Gradle plugins are used. Dependency artifacts could have been maliciously compromised by a MITM attack against the ajax.googleapis.com web site.,NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-15052,CWE-522 Insufficiently Protected Credentials,"The HTTP client in Gradle before 5.6 sends authentication credentials originally destined for the configured host. If that host returns a 30x redirect, Gradle also sends those credentials to all subsequent hosts that the request redirects to. This is similar to CVE-2018-1000007.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,CRITICAL,9.8,CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2019-16370,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,"The PGP signing plugin in Gradle before 6.0 relies on the SHA-1 algorithm, which might allow an attacker to replace an artifact with a different one that has the same SHA-1 message digest, a related issue to CVE-2005-4900.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2020-11979,NVD-CWE-Other,"As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-29428,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-379 Creation of Temporary File in Directory with Incorrect Permissions","In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the ""sticky"" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the ""sticky"" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.",NVD,MEDIUM,4.4,/AV:L/AC:M/Au:N/C:P/I:P/A:P,HIGH,7.8,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-29429,CWE-377 Insecure Temporary File,"In Gradle before version 7.0, files created with open permissions in the system temporary directory can allow an attacker to access information downloaded by Gradle. Some builds could be vulnerable to a local information disclosure. Remote files accessed through TextResourceFactory are downloaded into the system temporary directory first. Sensitive information contained in these files can be exposed to other local users on the same system. If you do not use the `TextResourceFactory` API, you are not vulnerable. As of Gradle 7.0, uses of the system temporary directory have been moved to the Gradle User Home directory. By default, this directory is restricted to the user running the build. As a workaround, set a more restrictive umask that removes read access to other users. When files are created in the system temporary directory, they will not be accessible to other users. If you are unable to change your system's umask, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only.",NVD,LOW,1.9,/AV:L/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: gradle-wrapper.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\Java\gradle-wrapper.jar,"","",571b18aecf7ec59796d1f7f3ad876d79,0f6f1fa2b59ae770ca14f975726bed8d6620ed9b,"",cpe:2.3:a:gradle:gradle:2.12:*:*:*:*:*:*:*,CVE-2021-32751,CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),"Gradle is a build tool with a focus on build automation. In versions prior to 7.2, start scripts generated by the `application` plugin and the `gradlew` script are both vulnerable to arbitrary code execution when an attacker is able to change environment variables for the user running the script. This may impact those who use `gradlew` on Unix-like systems or use the scripts generated by Gradle in thieir application on Unix-like systems. For this vulnerability to be exploitable, an attacker needs to be able to set the value of particular environment variables and have those environment variables be seen by the vulnerable scripts. This issue has been patched in Gradle 7.2 by removing the use of `eval` and requiring the use of the `bash` shell. There are a few workarounds available. For CI/CD systems using the Gradle build tool, one may ensure that untrusted users are unable to change environment variables for the user that executes `gradlew`. If one is unable to upgrade to Gradle 7.2, one may generate a new `gradlew` script with Gradle 7.2 and use it for older versions of Gradle. Fpplications using start scripts generated by Gradle, one may ensure that untrusted users are unable to change environment variables for the user that executes the start script. A vulnerable start script could be manually patched to remove the use of `eval` or the use of environment variables that affect the application's command-line. If the application is simple enough, one may be able to avoid the use of the start scripts by running the application directly with Java command.",NVD,HIGH,8.5,/AV:N/AC:M/Au:S/C:C/I:C/A:C,HIGH,7.5,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H,"",8
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2012-6708,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery before 1.9.0 is vulnerable to Cross-site Scripting (XSS) attacks. The jQuery(strInput) function does not differentiate selectors from HTML in a reliable fashion. In vulnerable versions, jQuery determined whether the input was HTML by looking for the '<' character anywhere in the string, giving attackers more flexibility when attempting to construct a malicious payload. In fixed versions, jQuery only deems the input to be HTML if it explicitly starts with the '<' character, limiting exploitability only to attackers who can control the beginning of a string, which is far less common.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2015-9251,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"jQuery before 3.0.0 is vulnerable to Cross-site Scripting (XSS) attacks when a cross-domain Ajax request is performed without the dataType option, causing text/javascript responses to be executed.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2019-11358,CWE-1321,"jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2020-11022,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",swagger-codegen-cli.jar: jquery-1.8.3.min.js,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\swagger-codegen-cli.jar\swagger-static\assets\js\jquery-1.8.3.min.js,"","",e1288116312e4728f98923c79b034b67,8b6babff47b8a9793f37036fd1b1a3ad41d38423,pkg:javascript/jquery@1.8.3.min,"",CVE-2020-11023,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,HIGHEST,3
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",xmlsec-1.5.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\xmlsec-1.5.1.jar,"Apache XML Security for Java supports XML-Signature Syntax and Processing,         W3C Recommendation 12 February 2002, and XML Encryption Syntax and         Processing, W3C Recommendation 10 December 2002. As of version 1.4,         the library supports the standard Java API JSR-105: XML Digital Signature APIs.","The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",ecf0046cfea8b48a12a6063396b2ca67,bbf5d96a49a2b58b8988202a3c8728461639090e,pkg:maven/org.apache.santuario/xmlsec@1.5.1,"cpe:2.3:a:apache:santuario_xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*",CVE-2013-2172,CWE-310 Cryptographic Issues,"jcp/xml/dsig/internal/dom/DOMCanonicalizationMethod.java in Apache Santuario XML Security for Java 1.4.x before 1.4.8 and 1.5.x before 1.5.5 allows context-dependent attackers to spoof an XML Signature by using the CanonicalizationMethod parameter to specify an arbitrary weak ""canonicalization algorithm to apply to the SignedInfo part of the Signature.""",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,"","","",HIGH,38
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",xmlsec-1.5.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\xmlsec-1.5.1.jar,"Apache XML Security for Java supports XML-Signature Syntax and Processing,         W3C Recommendation 12 February 2002, and XML Encryption Syntax and         Processing, W3C Recommendation 10 December 2002. As of version 1.4,         the library supports the standard Java API JSR-105: XML Digital Signature APIs.","The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",ecf0046cfea8b48a12a6063396b2ca67,bbf5d96a49a2b58b8988202a3c8728461639090e,pkg:maven/org.apache.santuario/xmlsec@1.5.1,"cpe:2.3:a:apache:santuario_xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*",CVE-2013-4517,CWE-399 Resource Management Errors,"Apache Santuario XML Security for Java before 1.5.6, when applying Transforms, allows remote attackers to cause a denial of service (memory consumption) via crafted Document Type Definitions (DTDs), related to signatures.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,"","","",HIGH,38
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",xmlsec-1.5.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\xmlsec-1.5.1.jar,"Apache XML Security for Java supports XML-Signature Syntax and Processing,         W3C Recommendation 12 February 2002, and XML Encryption Syntax and         Processing, W3C Recommendation 10 December 2002. As of version 1.4,         the library supports the standard Java API JSR-105: XML Digital Signature APIs.","The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",ecf0046cfea8b48a12a6063396b2ca67,bbf5d96a49a2b58b8988202a3c8728461639090e,pkg:maven/org.apache.santuario/xmlsec@1.5.1,"cpe:2.3:a:apache:santuario_xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*",CVE-2013-5823,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),"Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect availability via unknown vectors related to Security.",OSSINDEX,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,"","","",HIGH,38
configuratoreapi,"Thu, 27 Oct 2022 14:43:50 +0200",xmlsec-1.5.1.jar,D:\Progetti\github\dependency-check-7.0.0-release\prj\configuratoreapi\appl-configuratoreapi-rest\WEB-INF\lib\xmlsec-1.5.1.jar,"Apache XML Security for Java supports XML-Signature Syntax and Processing,         W3C Recommendation 12 February 2002, and XML Encryption Syntax and         Processing, W3C Recommendation 10 December 2002. As of version 1.4,         the library supports the standard Java API JSR-105: XML Digital Signature APIs.","The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",ecf0046cfea8b48a12a6063396b2ca67,bbf5d96a49a2b58b8988202a3c8728461639090e,pkg:maven/org.apache.santuario/xmlsec@1.5.1,"cpe:2.3:a:apache:santuario_xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*, cpe:2.3:a:apache:xml_security_for_java:1.5.1:*:*:*:*:*:*:*",CVE-2021-40690,CWE-200 Information Exposure,"All versions of Apache Santuario - XML Security for Java prior to 2.2.3 and 2.1.7 are vulnerable to an issue where the ""secureValidation"" property is not passed correctly when creating a KeyInfo from a KeyInfoReference element. This allows an attacker to abuse an XPath Transform to extract any local .xml files in a RetrievalMethod element.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:P/I:N/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,HIGH,38
