
/*
* SPDX-FileCopyrightText: (C) Copyright 2022Regione Piemonte
* 
* SPDX-License-Identifier: EUPL-1.2
*/

package it.csi.solconfig.configuratoreweb.wsdl.aura.ScreeningEpatiteC;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.2
 * Fri May 06 17:30:45 CEST 2022
 * Generated source version: 2.2.2
 * 
 */


@WebServiceClient(name = "ScreeningEpatiteC", 
                  wsdlLocation = "http://10.102.40.77:57772/sanitxens_t3/AURA.WS.ScreeningEpatiteC.cls?wsdl",
                  targetNamespace = "http://ScreeningEpatiteC.central.services.auraws.aura.csi.it") 
public class ScreeningEpatiteC_Service extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://ScreeningEpatiteC.central.services.auraws.aura.csi.it", "ScreeningEpatiteC");
    public final static QName ScreeningEpatiteCSoap = new QName("http://ScreeningEpatiteC.central.services.auraws.aura.csi.it", "ScreeningEpatiteCSoap");
    static {
        URL url = null;
        try {
            url = new URL("http://10.102.40.77:57772/sanitxens_t3/AURA.WS.ScreeningEpatiteC.cls?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://10.102.40.77:57772/sanitxens_t3/AURA.WS.ScreeningEpatiteC.cls?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ScreeningEpatiteC_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ScreeningEpatiteC_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ScreeningEpatiteC_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns ScreeningEpatiteCSoap
     */
    @WebEndpoint(name = "ScreeningEpatiteCSoap")
    public ScreeningEpatiteCSoap getScreeningEpatiteCSoap() {
        return super.getPort(ScreeningEpatiteCSoap, ScreeningEpatiteCSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ScreeningEpatiteCSoap
     */
    @WebEndpoint(name = "ScreeningEpatiteCSoap")
    public ScreeningEpatiteCSoap getScreeningEpatiteCSoap(WebServiceFeature... features) {
        return super.getPort(ScreeningEpatiteCSoap, ScreeningEpatiteCSoap.class, features);
    }

}
